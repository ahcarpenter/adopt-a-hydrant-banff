// http://stackoverflow.com/questions/3010840/loop-through-array-in-javascript
// http://stackoverflow.com/questions/351495/dynamically-creating-keys-in-javascript-associative-array
// http://www.w3schools.com/jsref/jsref_undefined.asp
// http://blog.mridey.com/2010/05/events-markers-infowindows-and-overlays.html
// https://github.com/alexgibson/shake.js
// http://gazpo.com/2012/04/password-strength/
// http://api.jquery.com/keyup/
// http://api.jquery.com/add/
// http://api.jquery.com/jQuery.browser/
// http://www.census.gov/tiger/tms/gazetteer/places2k.txt
// https://github.com/twitter/bootstrap/issues/452
// https://github.com/dnagir/spinjs-rails/tree/master/vendor/assets/javascripts
// http://fgnass.github.com/spin.js/
// http://api.jquery.com/remove/
// http://twitter.github.com/bootstrap/javascript.html#tooltips
// http://stackoverflow.com/questions/9501921/change-twitter-bootstrap-tooltip-content-on-click
// http://twitter.github.com/bootstrap/javascript.html#collapse
// http://api.jquery.com/attribute-contains-selector/
// http://api.jquery.com/hover/
// http://api.jquery.com/focus/
// http://api.jquery.com/each/
// http://api.jquery.com/hasClass/
// http://www.w3schools.com/jsref/met_loc_assign.asp
// http://www.w3schools.com/jsref/obj_location.asp
// https://developers.google.com/maps/documentation/javascript/streetview
// http://docs.jquery.com/UI/Effects/Pulsate
// http://stackoverflow.com/questions/1789945/javascript-string-contains
// http://www.w3schools.com/cssref/css3_pr_transform.asp
// http://ricostacruz.com/jquery.transit/
// stackoverflow.com/questions/9799221/resizing-google-maps-api-v3-div-with-jquery-tiles-not-refreshing-properly
// http://stackoverflow.com/questions/5373844/rails-refresh-view-after-submit-from-different-controller
// www.gutensite.com/Google-Maps-Custom-Markers-Cut-Off-By-Canvas-Tiles
// http://www.cssgirl.com/articles/2011/05/29/how-to-anchor-the-footer-to-bottom-of-page-or-header-to-top/
// http://stackoverflow.com/questions/1462799/html-anchor-block-element-inside-bottom-of-parent-block
// http://stackoverflow.com/questions/654112/how-do-you-detect-support-for-vml-or-svg-in-a-browser
// http://www.w3schools.com/js/js_timing.asp
// http://stackoverflow.com/questions/1301512/truncate-a-string-straight-javascript
// http://stackoverflow.com/questions/894860/how-do-i-make-a-default-value-for-a-parameter-to-a-javascript-function
// http://stackoverflow.com/questions/4083351/what-does-jquery-fn-mean
// http://stackoverflow.com/questions/11600275/assign-window-height-to-document-height/11600769#11600769
// http://www.sitepoint.com/forums/showthread.php?689515-ternary-if()-elseif()-else
// http://stackoverflow.com/questions/8916679/js-ternary-operator-confusion
// http://www.w3schools.com/js/js_cookies.asp
// http://stackoverflow.com/questions/807878/javascript-that-executes-after-page-load
// http://www.w3schools.com/jsref/jsref_replace.asp
// http://www.html5rocks.com/en/tutorials/workers/basics/
$(function(){
  var center = new google.maps.LatLng(51.178363, -115.570769)
  var mapOptions = {
    center: center,
    disableDoubleClickZoom: true,
    mapTypeId: google.maps.MapTypeId.ROADMAP,
    maxZoom: 19,
    minZoom: 15,
    panControl: false,
    rotateControl: false,
    scaleControl: false,
    scrollwheel: false,
    streetViewControl: true,
    zoom: 15,
    zoomControl: true
  }
  var map = new google.maps.Map(document.getElementById("map"), mapOptions)
  var origin = new google.maps.Point(0, 0)
  var anchor = new google.maps.Point(13.0, 18.0)
  function markerImage(image, size){return new google.maps.MarkerImage(image, typeof size !== undefined ? size : new google.maps.Size(27.0, 37.0), origin, anchor)}
  var opera = false
  var webkit = false
  var mozilla = false
  var chrome = false
  jQuery.each(jQuery.browser, function(i, val){
	if(i == 'opera'){
	  opera = true
	  _opera()
	}
	if(i == 'chrome'){chrome = true}
	if(i == 'webkit' || i == 'chrome'){
	  webkit = true
	  _webkit()
	}
	if(i == 'mozilla'){
	  mozilla = true
	  _mozilla()
	}
  })
  if($('html').hasClass('svg')){
	var greenMarkerImage = markerImage('<%= image_path 'markers/green.svg' %>')
	var redMarkerImage = markerImage('<%= image_path 'markers/red.svg' %>')
  } else{
	var greenMarkerImage = markerImage('<%= image_path 'markers/green.png' %>')
	var redMarkerImage = markerImage('<%= image_path 'markers/red.png' %>')
  }
  var green1MarkerImage = markerImage('<%= image_path 'markers/green1.png' %>')
  var red1MarkerImage = markerImage('<%= image_path 'markers/red1.png' %>')
  var green2MarkerImage = markerImage('<%= image_path 'markers/green2.png' %>')
  var red2MarkerImage = markerImage('<%= image_path 'markers/red2.png' %>')
  var markerShadowImage = markerImage('<%= image_path 'markers/shadow.png' %>', new google.maps.Size(46.0, 37.0))
  var activeThingId, activeMarker, activeInfoWindow, locale1
  var isWindowOpen = false
  var smsNotifications = false
  var emailNotifications = false
  var smsReferral = false
  var emailReferral = false
  var previewHidden = false
  var previewShown = false
  var sieveAdopted = false
  var sidebarVisible = false
  var adjusted = false
  var adjusted1 = false
  var sieveAdopted = false
  var thingIds = []
  var rememberMe = true
  var radio1 = true
  var radio2Clicked = false
  var tipShown=false
  var mobile = navigator.userAgent.indexOf('Mobi') != -1
  var iPhone = navigator.userAgent.indexOf('iPhone') != -1
  var iPad = navigator.userAgent.indexOf('iPad') != -1
  var focusedInputElement = ''
  delayOptions = {show: 1000, hide: 100}
  cityNames = ["Acadia Valley", "Acme", "Airdrie", "Alberta Beach", "Alder Flats", "Alix", "Alliance", "Altario", "Andrew", "Anzac", "Ardrossan", "Arrowwood", "Ashmont", "Assumption", "Athabasca", "Banff", "Barons", "Barrhead", "Bashaw", "Bassano", "Bawlf", "Bear Canyon", "Beaumont", "Beaverlodge", "Beiseker", "Bentley", "Berwyn", "Big Valley", "Bindloss", "Black Diamond", "Blackfalds", "Blackie", "Blue Ridge", "Bon Accord", "Bonanza", "Bonnyville", "Bow Island", "Bowden", "Boyle", "Bragg Creek", "Breton", "Brocket", "Brooks", "Brownvale", "Bruderheim", "Burdett", "Byemoor", "Cadomin", "Calgary", "Calling Lake", "Calmar", "Camrose", "Canmore", "Carbon", "Cardston", "Carmangay", "Caroline", "Carseland", "Carstairs", "Castor", "Cayley", "Cereal", "Cessford", "Champion", "Chauvin", "Chestermere", "Chipewyan Lake", "Chipman", "Clairmont", "Claresholm", "Clive", "Clyde", "Coaldale", "Coalhurst", "Cochrane", "Cold Lake", "Conklin", "Consort", "Coronation", "Coutts", "Cowley", "Craigmyle", "Cremona", "Crossfield", "Crowsnest Pass", "Czar", "Daysland", "DeBolt", "Delburne", "Delia", "Derwent", "Devon", "Dewberry", "Didsbury", "Dixonville", "Donalda", "Donnelly", "Drayton Valley", "Drumheller", "Duchess", "Eaglesham", "East Coulee", "Eckville", "Edgerton", "Edmonton", "Edson", "Elk Point", "Elkwater", "Elnora", "Empress", "Enchant", "Etzikom", "Evansburg", "Exshaw", "Fairview", "Falher", "Faust", "Ferintosh", "Flatbush", "Foremost", "Forestburg", "Fort Assiniboine", "Fort Chipewyan", "Fort MacKay", "Fort Macleod", "Fort McMurray", "Fort", "Fort Vermilion", "Fox Creek", "Fox Lake", "Gadsby", "Galahad", "Gibbons", "Gift Lake", "Girouxville", "Gleichen", "Glendon", "Glenwood", "Grand Centre", "Grande Cache", "Grande Prairie", "Granum", "Grassland", "Grassy Lake", "Grimshaw", "Grouard", "Hairy Hill", "Halkirk", "Hanna", "Hardisty", "Hay Lakes", "Hays", "Heinsburg", "Heisler", "High Level", "High Prairie", "High River", "Hilda", "Hines Creek", "Hinton", "Hobbema", "Holden", "Hughenden", "Hussar", "Hythe", "Innisfail", "Innisfree", "Irma", "Iron Springs", "Irricana", "Irvine", "Islay", "Jarvie", "Jasper", "Jenner", "Joussard", "Kananaskis", "Keephills", "Keg River", "Killam", "Kinuso", "Kitscoty", "La Crete", "Lac La Biche", "Lacombe", "Lake Louise", "Lamont", "Langdon", "Lavoy", "Leduc", "Legal", "Leslieville", "Lethbridge", "Lloydminster", "Lodgepole", "Lomond", "Longview", "Lougheed", "Magrath", "Ma-Me-O Beach", "Manning", "Mannville", "Manyberries", "Marlboro", "Marwayne", "Mayerthorpe", "McLennan", "Meander River", "Medicine Hat", "Milk River", "Millet", "Milo", "Minburn", "Mirror", "Morinville", "Morley", "Morrin", "Mulhurst", "Mundare", "Myrnam", "Namao", "Nampa", "Nanton", "New Dayton", "New Norway", "New Sarepta", "Newbrook", "Nisku", "Niton Junction", "Nobleford", "Nordegg", "Okotoks", "Olds", "Onoway", "Oyen", "Paradise Valley", "Peace River", "Peerless Lake", "Peers", "Penhold", "Picture Butte", "Pincher Creek", "Plamondon", "Ponoka", "Provost", "Radway", "Rainbow Lake", "Ralston", "Raymond", "Red Deer", "Redcliff", "Redwater", "Rimbey", "Robb", "Rochester", "Rocky Mountain House", "Rockyford", "Rolling Hills", "Rosalind", "Rosebud", "Rumsey", "Rycroft", "Ryley", "Sangudo", "Saskatchewan River Crossing", "Schuler", "Seba Beach", "Sedgewick", "Seven Persons", "Sexsmith", "Sherwood Park", "Sibbald", "Silver Valley", "Slave Lake", "Smith", "Smoky Lake", "Spirit River", "Spruce Grove", "Spruce View", "St. Albert", "St. Michael", "St. Paul", "Stand Off", "Standard", "Stavely", "Stettler", "Stirling", "Stony Plain", "Strathmore", "Strome", "Sundre", "Swan Hills", "Sylvan Lake", "Taber", "Thorhild", "Thorsby", "Three Hills", "Tilley", "Tofield", "Tomahawk", "Torrington", "Trochu", "Trout Lake", "Turner Valley", "Two Hills", "Valleyview", "Vauxhall", "Vegreville", "Vermilion", "Veteran", "Viking", "Vilna", "Vulcan", "Wabamun", "Wainwright", "Walsh", "Wandering River", "Wanham", "Warburg", "Warner", "Warspite", "Waskatenau", "Wembley", "Westlock", "Wetaskiwin", "Whitecourt", "Whitelaw", "Widewater", "Wildwood", "Willingdon", "Winfield", "Woking", "Worsley", "Wrentham", "Youngstown", "100 Mile House", "108 Mile House", "108 Mile Ranch", "150 Mile House", "Abbotsford", "Agassiz", "Ahousat", "Aldergrove", "Alert Bay", "Alexis Creek", "Alkali Lake", "Armstrong", "Ashcroft", "Atlin", "Avola", "Balfour", "Bamfield", "Barriere", "Beach Grove", "Bear Lake", "Beaver Cove", "Beaverdell", "Bella Bella", "Bella Coola", "Black Creek", "Black Point", "Blue River", "Bob Quinn Lake", "Boston Bar", "Boswell", "Bowen Island", "Bowser", "Bridge Lake", "Britannia Beach", "Burnaby", "Burns Lake", "Cache Creek", "Campbell River", "Canal Flats", "Cassiar", "Castlegar", "Celista", "Chase", "Chemainus", "Chetwynd", "Chilliwack", "Christina Lake", "Clearwater", "Clinton", "Cobble Hill", "Colwood", "Comox", "Coquitlam", "Courtenay", "Cowichan Bay", "Cranbrook", "Crawford Bay", "Crescent Beach", "Creston", "Cumberland", "D`Arcy", "Dawson Creek", "Dease Lake", "Delta", "Donald", "Douglas Lake", "Duncan", "Dunster", "East Pine", "Elkford", "Elko", "Enderby", "Estevan Point", "Fairmont Hot Springs", "Falkland", "Fauquier", "Fernie", "Field", "Flatrock", "Forest Grove", "Fort Fraser", "Fort Nelson", "Fort St. James", "Fort St. John", "Fraser Lake", "Fruitvale", "Gabriola", "Galiano Island", "Ganges", "Gibsons", "Giscome", "Gold Bridge", "Gold River", "Golden", "Good Hope Lake", "Grand Forks", "Granisle", "Grasmere", "Grassy Plains", "Greenville", "Greenwood", "Hartley Bay", "Hazelton", "Hedley", "Hemlock Valley", "Hendrix Lake", "Hixon", "Holberg", "Hope", "Horsefly", "Houston", "Hudson`s Hope", "Invermere", "Iskut", "Jaffray", "Kamloops", "Kaslo", "Kelowna", "Kemano", "Keremeos", "Kimberley", "Kincolith", "Kitimat", "Kitkatla", "Kitsault", "Kitwanga", "Klemtu", "Kyuquot", "Lac la Hache", "Ladysmith", "Lake Cowichan", "Langara", "Langley", "Lantzville", "Likely", "Lillooet", "Little Fort", "Logan Lake", "Loos", "Lower Post", "Lumby", "Lytton", "Mackenzie", "Maple Ridge", "Masset", "McBride", "McLeese Lake", "McLeod Lake", "Merritt", "Mica Creek", "Midway", "Mission", "Montney", "Moyie", "Muncho Lake", "Nakusp", "Nanaimo", "Naramata", "Nelson", "New Aiyansh", "New Denver", "New Westminster", "Nimpo Lake", "North Saanich", "North Vancouver", "Ocean Falls", "Ocean Park", "Okanagan Falls", "Oliver", "Osoyoos", "Oyama", "Parksville", "Parson", "Peachland", "Pemberton", "Penticton", "Pitt Meadows", "Port Alberni", "Port Alice", "Port Clements", "Port Coquitlam", "Port Edward", "Port Hardy", "Port McNeill", "Port Mellon", "Port Moody", "Port Renfrew", "Pouce Coupe", "Powell River", "Prespatou", "Prince George", "Prince Rupert", "Princeton", "Prophet River", "Quadra Island", "Qualicum Beach", "Queen Charlotte", "Quesnel", "Radium Hot Springs", "Red Rock", "Revelstoke", "Richmond", "Riondel", "Riske Creek", "Rock Creek", "Rolla", "Rossland", "Saanich", "Salmo", "Salmon Arm", "Salmon Valley", "Sandspit", "Savona", "Sayward", "Sechelt", "Shalalth", "Sicamous", "Sidney", "Skookumchuck", "Slocan", "Smithers", "Sointula", "Sooke", "Sorrento", "South Slocan", "Sparwood", "Spences Bridge", "Spillimacheen", "Squamish", "Stewart", "Summerland", "Summit Lake", "Surrey", "Tachie", "Tahsis", "Tatla Lake", "Taylor", "Telegraph Creek", "Telkwa", "Terrace", "Thrums", "Toad River", "Tofino", "Topley", "Trail", "Trout Lake", "Tsay Keh Dene", "Tumbler Ridge", "Ucluelet", "Valemount", "Vallican", "Van Anda", "Vancouver", "Vanderhoof", "Vavenby", "Vernon", "Victoria", "View Royal", "Wells", "West Vancouver", "Westbank", "Westwold", "Whistler", "White Rock", "Williams Lake", "Willowbrook", "Winfield", "Winter Harbour", "Wonowon", "Wynndel", "Yahk", "Yale", "Youbou", "Zeballos", "Agassiz Provincial Forest", "Alexander", "Alonsa", "Altona", "Arborg", "Ashern", "Austin", "Baldur", "Basswood", "Beausejour", "Belmont", "Benito", "Berens River", "Beulah", "Binscarth", "Birtle", "Bissett", "Boissevain", "Brandon", "Brochet", "Brookdale", "Camperville", "Carberry", "Carman", "Cartwright", "Churchill", "Cormorant", "Cowan", "Cranberry Portage", "Crandall", "Cross Lake", "Crystal City", "Cypress River", "Darlingford", "Dauphin", "Deloraine", "Dominion City", "Dugald", "Easterville", "Eddystone", "Edwin", "Elgin", "Elie", "Elkhorn", "Elm Creek", "Emerson", "Erickson", "Eriksdale", "Ethelbert", "Falcon Lake", "Fisher Branch", "Fisher River", "Flin Flon", "Fork River", "Foxwarren", "Gilbert Plains", "Gillam", "Gimli", "Gladstone", "Glenboro", "Glenella", "Gods Lake Narrows", "Grand Beach", "Grand Rapids", "Grandview", "Gretna", "Gypsumville", "Hadashville", "Hamiota", "Hartney", "Hecla", "Holland", "Ilford", "Inwood", "Island Lake", "Kelwood", "Kenton", "Killarney", "La Broquerie", "Lac Brochet", "Lac du Bonnet", "Langruth", "Leaf Rapids", "Libau", "Little Grand Rapids", "Lockport", "Lundar", "Lynn Lake", "MacGregor", "Mafeking", "Manigotagan", "Manitou", "McAuley", "McCreary", "Melita", "Miami", "Miniota", "Minnedosa", "Minto", "Moose Lake", "Morden", "Morris", "Neepawa", "Nelson House", "Newdale", "Niverville", "Norway House", "Notre Dame de Lourdes", "Oak Lake", "Oak River", "Oakville", "Ochre River", "Oxford House", "Peguis", "Pelican Rapids", "Pikwitonei", "Pilot Mound", "Pinawa", "Pine Dock", "Pine Falls", "Pine River", "Piney", "Plum Coulee", "Plumas", "Pointe du Bois", "Poplar River", "Poplarfield", "Portage la Prairie", "Rapid City", "Rathwell", "Red Sucker Lake", "Rennie", "Reston", "Rivers", "Riverton", "Roblin", "Roland", "Rorketon", "Rossburn", "Russell", "Sandy Lake", "Sanford", "Selkirk", "Shamattawa", "Shilo", "Shoal Lake", "Sidney", "Sifton", "Snow Lake", "Snowflake", "Somerset", "Souris", "South Indian Lake", "Sperling", "Split Lake", "Sprague", "St. Claude", "St. Francois Xavier", "St. Jean Baptiste", "St. Laurent", "St. Lazare", "Starbuck", "Ste. Agathe", "Ste. Rose du Lac", "Steep Rock", "Steinbach", "Stonewall", "St-Pierre-Jolys", "Strathclair", "Swan Lake", "Swan River", "Tadoule Lake", "Teulon", "The Pas", "Thicket Portage", "Thompson", "Treherne", "Virden", "Vita", "Waasagomach", "Wabowden", "Wanless", "Wasagaming", "Waterhen", "Wawanesa", "Whitemouth", "Winkler", "Winnipeg", "Winnipeg Beach", "Winnipegosis", "Woodridge", "Albert", "Albert Mines", "Allardville", "Alma", "Baie-Ste-Anne", "Baker Brook", "Balmoral", "Bath", "Bathurst", "Belledune", "Beresford", "Blacks Harbour", "Blackville", "Boiestown", "Bouctouche", "Browns Flat", "Campbellton", "Campobello Island", "Canterbury", "Cap-Pele", "Caraquet", "Centreville", "Chatham", "Chipman", "Clair", "Clarks Corners", "Cocagne", "Dalhousie", "Debec", "Dieppe", "Doaktown", "Dorchester", "Edmundston", "Florenceville", "Fords Mills", "Fredericton", "Fredericton Junction", "Gagetown", "Glassville", "Grand Bay", "Grand Falls", "Grand Manan", "Grande-Anse", "Grand-Sault", "Hampstead", "Hampton", "Harewood", "Hartland", "Havelock", "Hillsborough", "Hoyt", "Jacquet River", "Kedgwick", "Keswick", "Lameque", "Maces Bay", "McAdam", "Meductic", "Memramcook", "Millville", "Minto", "Miramichi", "Miscou Island", "Moncton", "Nackawic", "Neguac", "New Denmark", "Norton", "Oromocto", "Paquetville", "Perth-Andover", "Petit Rocher", "Petitcodiac", "Plaster Rock", "Port Elgin", "Quispamsis", "Red Bank", "Richibucto", "Riverview", "Rogersville", "Rothesay", "Sackville", "Saint Andrews", "Saint John", "Salisbury", "Shediac", "Shippagan", "Springfield", "St. George", "St. Leonard", "St. Martins", "St. Stephen", "Stanley", "St-Antoine", "St-Basile", "Ste-Anne-de-Madawaska", "St-Isidore", "St-Louis de Kent", "St-Quentin", "Summerville", "Sussex", "Tabusintac", "Tobique First Nation", "Tracadie-Sheila", "Welsford", "Westfield", "Woodstock", "Young`s Cove Road", "Appleton", "Argentia", "Arnold`s Cove", "Avondale", "Badger", "Baie Verte", "Batteau", "Battle Harbour", "Bauline", "Bay Bulls", "Bay de Verde", "Bay L`Argent", "Bay Roberts", "Beaumont", "Bell Island", "Belleoram", "Bellevue", "Benoit`s Cove", "Birchy Bay", "Bishop`s Falls", "Black Duck Cove", "Black Tickle", "Bonavista", "Botwood", "Boyd`s Cove", "Branch", "Brent`s Cove", "Brigus", "Buchans", "Burgeo", "Burin", "Burlington", "Burnt Islands", "Campbellton", "Cape Broyle", "Carbonear", "Carmanville", "Cartwright", "Catalina", "Centreville-Wareham-Trinity", "Chance Cove", "Change islands", "Chapel Arm", "Charlottetown", "Churchill Falls", "Clarenville", "Clarenville-Shoal Harbour", "Clarke`s Beach", "Codroy", "Colliers", "Come By Chance", "Comfort Cove-Newstead", "Conception Bay South", "Conception Harbour", "Conche", "Conne River", "Cook`s Harbour", "Corner Brook", "Cottlesville", "Cow Head", "Cupids", "Daniel`s Harbour", "Davis Inlet", "Deer Lake", "Dover", "Eastport", "Elliston", "Embree", "Englee", "English Harbour East", "Fair Haven", "Fermeuse", "Flatrock", "Fleur de Lys", "Flower`s Cove", "Fogo", "Forteau", "Fortune", "Fox Cove-Mortier", "Frenchmans Island", "Freshwater", "Gambo", "Gander", "Garnish", "Gaultois", "Glenwood", "Glovertown", "Goose Bay", "Grand Bank", "Grand Falls", "Grand Falls-Windsor", "Great Harbour Deep", "Green Island Cove", "Greenspond", "Hampden", "Hant`s Harbour", "Happy Valley-Goose Bay", "Harbour Breton", "Harbour Grace", "Harbour Main-Chapel Cove-Lakev", "Hare Bay", "Hawke`s Bay", "Heart`s Content", "Heart`s Delight-Islington", "Heart`s Desire", "Hickman`s Harbour", "Hillgrade", "Hillview", "Holyrood", "Hopedale", "Howley", "Humber Arm South", "Indian Tickle", "Island Harbour", "Isle aux Morts", "Jackson`s Arm", "Jamestown", "Joe Batt`s Arm-Barr`d Islands-", "King`s Cove", "King`s Point", "Kippens", "L`Anse-au-Loup", "La Scie", "Labrador City", "Ladle Cove", "Lamaline", "Lark Harbour", "Lawn", "Lewisporte", "Little Bay", "Little Bay Islands", "Little Burnt Bay", "Little Catalina", "Little Heart`s Ease", "Logy Bay-Middle Cove-Outer Cov", "Long Harbour-Mount Arlington H", "Long Pond", "Lourdes", "Lower Island Cove", "Lumsden", "Main Brook", "Makkovik", "Mary`s Harbour", "Marystown", "Massey Drive", "McIver`s", "Millertown", "Milltown-Head of Bay D`Espoir", "Ming`s Bight", "Monkstown", "Mount Carmel-Mitchells Brook-S", "Mount Moriah", "Mount Pearl", "Musgrave Harbour", "Musgravetown", "Nain", "New Harbour", "New Perlican", "New-Wes-Valley", "Nippers Harbour", "Norman`s Cove-Long Cove", "Norris Arm", "North West River", "Northern Arm", "Old Perlican", "Packs Harbour", "Pacquet", "Paradise", "Paradise River", "Pasadena", "Peterview", "Petty Harbour-Maddox Cove", "Placentia", "Plate Cove East", "Point Leamington", "Pool`s Cove", "Port au Choix", "Port au Port West-Aguathuna-Fe", "Port Aux Basques", "Port Blandford", "Port Hope Simpson", "Port Rexton", "Port Saunders", "Port Union", "Portugal Cove-St. Philip`s", "Postville", "Pouch Cove", "Princeton", "Raleigh", "Ramea", "Red Bay", "Reefs Harbour", "Rencontre East", "Rigolet", "River of Ponds", "Robert`s Arm", "Rocky Harbour", "Roddickton", "Rose Blanche-Harbour Le Cou", "Rushoon", "Salmon Cove", "Salvage", "Seal Cove", "Seldom-Little Seldom", "Small Point-Broad Cove-Blackhe", "South Brook", "South River", "Southern Harbour", "Spaniard`s Bay", "Spotted Island", "Springdale", "St. Alban`s", "St. Anthony", "St. Bernard`s-Jacques Fontaine", "St. Brendan`s", "St. Bride`s", "St. George`s", "St. Jacques-Coomb`s Cove", "St. John`s", "St. Lawrence", "St. Lewis", "St. Lunaire-Griquet", "St. Mary`s", "St. Vincent`s-St. Stephen`s-Pe", "Steady Brook", "Stephenville", "Stephenville Crossing", "Summerford", "Summerside", "Sunnyside", "Terra Nova", "Terrenceville", "Torbay", "Trepassey", "Triton", "Trout River", "Twillingate", "Upper Island Cove", "Victoria", "Wabana", "Wabush", "Wesleyville", "Western Bay", "Westport", "Whitbourne", "Winterton", "Witless Bay", "Woody Point", "Aklavik", "Edzo", "Enterprise", "Fort Good Hope", "Fort Liard", "Fort McPherson", "Fort Providence", "Fort Simpson", "Fort Smith", "Hay River", "Inuvik", "Jean Marie River", "Kakisa", "Kugluktuk", "Nahanni Butte", "Norman Wells", "Rae", "Rae Lakes", "Trout Lake", "Tsiigehtchic", "Tuktoyaktuk", "Wrigley", "Yellowknife", "Advocate Harbour", "Amherst", "Annapolis Royal", "Antigonish", "Argyle", "Arichat", "Aylesford", "Baddeck", "Bass River", "Bear River", "Berwick", "Blandford", "Boisdale", "Boularderie", "Bridgetown", "Bridgewater", "Brookfield", "Canning", "Canso", "Caribou", "Carleton", "Chelsea", "Chester", "Cheticamp", "Cheverie", "Clark`s Harbour", "Clarksville", "Collingwood Corner", "Dartmouth", "Debert", "Digby", "Dingwall", "Dundee", "East Bay", "Ecum Secum", "Elmsdale", "Eskasoni", "Freeport", "French Village", "Gabarus", "Glace Bay", "Goldboro", "Goshen", "Grand Etang", "Grand Lake", "Grand Narrows", "Great Village", "Greenwood", "Guysborough", "Halifax", "Hantsport", "Heatherton", "Hopewell", "Hubbards", "Ingonish", "Inverness", "Kennetcook", "Kentville", "Kenzieville", "Ketch Harbour", "Kingston", "L`Ardoise", "LaHave", "Lake Charlotte", "Larrys River", "Lawrencetown", "Liverpool", "Lockeport", "Louisbourg", "Louisdale", "Lunenburg", "Mabou", "Maccan", "Mahone Bay", "Maitland", "Margaree Forks", "Marion Bridge", "Melrose", "Merigomish", "Meteghan", "Middleton", "Monastery", "Mount Uniacke", "Mulgrave", "Musquodoboit Harbour", "New Germany", "New Glasgow", "New Ross", "New Waterford", "Noel", "North Sydney", "Oxford", "Parrsboro", "Peggy`s Cove", "Pictou", "Port Bickerton", "Port Dufferin", "Port Greville", "Port Hawkesbury", "Port Hood", "Port La Tour", "Port Maitland", "Port Morien", "Port Mouton", "Pubnico", "Pugwash", "Queensport", "River Hebert", "River John", "Riverport", "Salt Springs", "Saulnierville", "Shelburne", "Sherbrooke", "Shubenacadie", "Southampton", "Springfield", "Springhill", "St. Margaret Village", "St. Peter`s", "Stellarton", "Stewiacke", "Sydney", "Tangier", "Tatamagouche", "Thorburn", "Trenton", "Truro", "Tusket", "Upper Musquodoboit", "Upper Stewiacke", "Wallace", "Walton", "Waverley", "Wedgeport", "Westville", "Weymouth", "Whycocomagh", "Windsor", "Wolfville", "Yarmouth", "Arviat", "Baker Lake", "Cambridge Bay", "Cape Dorset", "Chesterfield Inlet", "Coral Harbour", "Gjoa Haven", "Iqaluit", "Rankin Inlet", "Resolute", "Whale Cove", "Aberarder", "Abitibi Canyon", "Acton", "Adolphustown", "Ailsa Craig", "Ajax", "Alban", "Alderville First Nation", "Alexandria", "Alfred", "Algoma Mills", "Alliston", "Almonte", "Alvinston", "Amherstburg", "Ancaster", "Angus", "Apsley", "Arden", "Arkell", "Arkona", "Armstrong", "Arnprior", "Arthur", "Athens", "Atikokan", "Attawapiskat", "Atwood", "Auburn", "Aurora", "Avonmore", "Aylmer", "Ayr", "Ayton", "Azilda", "Baden", "Bailieboro", "Bala", "Balmertown", "Baltimore", "Bancroft", "Barrie", "Barry`s Bay", "Barwick", "Batawa", "Batchawana Bay", "Bath", "Bayfield", "Baysville", "Beachburg", "Beachville", "Beamsville", "Bear`s Passage", "Beardmore", "Bearskin Lake", "Bearskin Lake First Nation", "Beaverton", "Beeton", "Belle River", "Belleville", "Belmont", "Bethany", "Bethesda", "Big Trout Lake", "Binbrook", "Birch Island", "Biscotasing", "Blackstock", "Blenheim", "Blezard Valley", "Blind River", "Bloomfield", "Blyth", "Bobcaygeon", "Bolton", "Bonfield", "Borden", "Bothwell", "Bourget", "Bowmanville", "Bracebridge", "Bradford", "Bradford West Gwillimbury", "Braeside", "Brampton", "Brantford", "Brechin", "Breslau", "Bridgenorth", "Brigden", "Bright", "Brighton", "Brights Grove", "Britt", "Brockville", "Brooklin", "Brownsville", "Bruce Mines", "Brussels", "Buckhorn", "Burford", "Burgessville", "Burk`s Falls", "Burleigh Falls", "Burlington", "Cache Bay", "Calabogie", "Caledon", "Caledon East", "Caledonia", "Callander", "Calstock", "Cambray", "Cambridge", "Cameron", "Camlachie", "Campbellford", "Campbellville", "Cannington", "Capreol", "Caradoc First Nation", "Caramat", "Cardiff", "Cardinal", "Cargill", "Carleton Place", "Carnarvon", "Carp", "Cartier", "Casselman", "Castlemore", "Castleton", "Cat Lake", "Cavan", "Cayuga", "Centralia", "Chalk River", "Chapleau", "Charlton", "Chatham", "Chatsworth", "Chelmsford", "Chesley", "Chesterville", "Chiefs Point First Nation", "Chippewas of Kettle/Stony Poin", "Chippewas Of Sarnia First Nati", "Christian Island", "Claremont", "Clarence Creek", "Clarence-Rockland", "Clarington", "Clarkson", "Clearwater Bay", "Clifford", "Clinton", "Cloud Bay", "Cobalt", "Cobden", "Coboconk", "Cobourg", "Cochenour", "Cochrane", "Coe Hill", "Colborne", "Colchester", "Cold Springs", "Coldwater", "Collingwood", "Comber", "Concord", "Coniston", "Connaught", "Constance Bay", "Constance Lake First Nation", "Cookstown", "Cooksville", "Cornwall", "Corunna", "Cottam", "Courtice", "Courtright", "Crediton", "Creemore", "Crysler", "Crystal Beach", "Cumberland", "Dashwood", "Deep River", "Deer Lake", "Deerbrook", "Delaware of the Thames(Moravia", "Delhi", "Delta", "Denbigh", "Desbarats", "Deseronto", "Deux-Rivieres", "Devlin", "Dokis", "Dokis First Nation", "Dorchester", "Dorion", "Dorset", "Douglas", "Douglastown", "Drayton", "Dresden", "Drumbo", "Dryden", "Dublin", "Dubreuilville", "Dunchurch", "Dundalk", "Dundas", "Dungannon", "Dunnville", "Dunsford", "Durham", "Dutton", "Dwight", "Dyer`s Bay", "Eagle Lake First Nation", "Eagle River", "Ear Falls", "Earlton", "East Gwillimbury", "East York", "Eastwood", "Echo Bay", "Eganville", "Elgin", "Elizabethtown", "Elk Lake", "Elliot Lake", "Elmira", "Elmvale", "Elora", "Embro", "Embrun", "Emeryville", "Emo", "Emsdale", "Englehart", "Enterprise", "Erin", "Espanola", "Essex", "Estaire", "Etobicoke", "Eugenia", "Exeter", "Fauquier", "Fenelon Falls", "Fenwick", "Fergus", "Feversham", "Field", "Finch", "Fingal", "Fisherville", "Flamborough", "Flanders", "Flesherton", "Foley", "Foleyet", "Forest", "Fort Albany", "Fort Erie", "Fort Frances", "Fort Hope", "Fort Severn", "Fort Severn First Nation", "Fort William First Nation", "Foxboro", "Foymount", "Frankford", "Freelton", "French River First Nation", "Galt", "Gananoque", "Garden Hill", "Garden River First Nation", "Garson", "Georgetown", "Georgina", "Geraldton", "Gilmour", "Glen Robertson", "Glen Water", "Glen Williams", "Glencoe", "Gloucester", "Goderich", "Gogama", "Golden Lake", "Gooderham", "Gore Bay", "Gormley", "Gorrie", "Goulais River", "Gowganda", "Grafton", "Grand Bend", "Grand Valley", "Granton", "Grassy Narrows", "Grassy Narrows First Nation", "Gravenhurst", "Greensville", "Grimsby", "Guelph", "Gull Bay", "Gull Bay First Nation", "Hagersville", "Haileybury", "Haldimand", "Haliburton", "Halton Hills", "Hamilton", "Hampton", "Hanmer", "Hanover", "Harrietsville", "Harriston", "Harrow", "Harrowsmith", "Hastings", "Havelock", "Hawk Junction", "Hawkesbury", "Hearst", "Hemlo", "Hensall", "Henvey Inlet First Nation", "Hepworth", "Hespeler", "Hickson", "Highgate", "Hillsburgh", "Holland Landing", "Holstein", "Honey Harbour", "Hornepayne", "Hudson", "Humphrey", "Huntsville", "Ignace", "Ilderton", "Ingersoll", "Ingleside", "Innerkip", "Innisfil", "Inverary", "Inwood", "Iron Bridge", "Iroquois", "Iroquois Falls", "Jaffray Melick", "Jarvis", "Jasper", "Jellicoe", "Jockvale", "Johnstown", "Jordan", "Kaministiquia", "Kamiskotia", "Kanata", "Kapuskasing", "Kasabonika First Nation", "Kashechewan First Nation", "Kearney", "Keene", "Keewatin", "Kemptville", "Kenora", "Kent Centre", "Kerwood", "Keswick", "Killaloe", "Killarney", "Kincardine", "King City", "Kingfisher Lake", "Kingfisher Lake First Nation", "Kingston", "Kingsville", "Kinmount", "Kintore", "Kirkfield", "Kirkland Lake", "Kirkton", "Kitchener", "Kleinburg", "L`Orignal", "Lac la Croix", "Lac Seul First Nation", "Lafontaine", "Lagoon City", "Lakefield", "Lambeth", "Lanark", "Lancaster", "Langton", "Lansdowne", "Lansdowne House", "Larder Lake", "LaSalle", "Latchford", "Leamington", "Lefroy", "Levack", "Lincoln", "Lindsay", "Linwood", "Lion`s Head", "Listowel", "Little Britain", "Little Current", "Lively", "Lombardy", "London", "Long Lac", "Long Lake First Nation", "Long Point", "Long Sault", "Longlac", "Lorne", "Lucan", "Lucknow", "Lyn", "Lynden", "M`Chigeeng", "Maberly", "Macdiarmid", "MacTier", "Madoc", "Madsen", "Magnetawan", "Magnetawan First Nation", "Maidstone", "Maitland", "Mallorytown", "Malton", "Manitouwadge", "Manitowaning", "Manotick", "Maple", "Marathon", "Markdale", "Markham", "Markstay", "Marmora", "Marten Falls First Nation", "Marten River", "Martintown", "Massey", "Matachewan", "Matheson", "Mattawa", "Mattice", "Maxville", "Maynooth", "McDonalds Corners", "McGregor", "McKellar", "Meaford", "Melbourne", "Merlin", "Merrickville", "Metcalfe", "Midland", "Mildmay", "Milford Bay", "Millbrook", "Millhaven", "Milton", "Milverton", "Minaki", "Mindemoya", "Minden", "Mine Centre", "Missanabie", "Mississauga", "Mitchell", "Mohawks Of The Bay of Quinte F", "Monkton", "Moonbeam", "Moonstone", "Mooretown", "Moose Creek", "Moose Factory", "Moosonee", "Morrisburg", "Morson", "Mount Albert", "Mount Brydges", "Mount Forest", "Mount Hope", "Mount Pleasant", "Muskoka", "Muskoka Falls", "Muskrat Dam", "Muskrat Dam First Nation", "Nairn", "Naiscoutaing First Nation", "Nakina", "Nanticoke", "Napanee", "Navan", "Nepean", "Nephton", "Nestor Falls", "Neustadt", "New Dundee", "New Hamburg", "New Liskeard", "New Tecumseth", "Newburgh", "Newcastle", "Newmarket", "Newtonville", "Niagara Falls", "Niagara-on-the-Lake", "Nickel Centre", "Nipigon", "Nipissing First Nation", "Nobel", "Nobleton", "Noelville", "North Augusta", "North Bay", "North Gower", "North Spirit Lake", "North York", "Northbrook", "Norval", "Norwich", "Norwood", "Oak Ridges", "Oakville", "Oakwood", "Oba", "Odessa", "Ogoki", "Ohsweken", "Oil Springs", "Ojibways of Hiawatha First Nat", "Ojibways of Walpole Island Fir", "Omemee", "Onaping Falls", "Oneida First Nation", "Opasatika", "Ophir", "Orangeville", "Orillia", "Orleans", "Oro", "Orono", "Orrville", "Osgoode", "Oshawa", "Ottawa", "Otterville", "Owen Sound", "Oxdrift", "Oxford Mills", "Paisley", "Pakenham", "Palgrave", "Palmer Rapids", "Palmerston", "Paquette Corner", "Parham", "Paris", "Parkhill", "Parry Sound", "Pass Lake", "Peawanuck", "Pefferlaw", "Pelee Island", "Pelham", "Pembroke", "Penetanguishene", "Perrault Falls", "Perth", "Petawawa", "Peterborough", "Petrolia", "Pickering", "Pickle Lake", "Picton", "Pikangikum First Nation", "Pineal Lake", "Plantagenet", "Plattsville", "Pleasant Park", "Plevna", "Point Grondine First Nation", "Point Pelee", "Pointe au Baril", "Port Burwell", "Port Carling", "Port Colborne", "Port Credit", "Port Cunnington", "Port Dover", "Port Elgin", "Port Franks", "Port Hope", "Port Lambton", "Port Loring", "Port McNicoll", "Port Perry", "Port Robinson", "Port Rowan", "Port Stanley", "Port Sydney", "Portland", "Powassan", "Prescott", "Preston", "Princeton", "Puce", "Queenston", "Queensville", "Rainy Lake First Nation", "Rainy River", "Raith", "Ramore", "Rayside-Balfour", "Red Lake", "Red Rock", "Redbridge", "Redditt", "Renfrew", "Restoule", "Richmond", "Richmond Hill", "Ridgetown", "Ridgeway", "Ripley", "Rockland", "Rockwood", "Rodney", "Rolphton", "Rondeau", "Roseneath", "Rosseau", "Russell", "Ruthven", "Sachigo First Nation Reserve 1", "Saint Clair Beach", "Salem", "Sandwich", "Sandy Cove Acres", "Sandy Lake", "Sandy Lake First Nation", "Sapawe", "Sarnia", "Sauble Beach", "Saugeen First Nation", "Sault Ste. Marie", "Savant Lake", "Scarborough", "Schomberg", "Schreiber", "Scotland", "Seaforth", "Searchmont", "Sebright", "Sebringville", "Seeleys Bay", "Selby", "Selkirk", "Serpent River First Nation", "Severn Bridge", "Shakespeare", "Shannonville", "Sharbot Lake", "Shawanaga First Nation", "Shebandowan", "Shedden", "Shelburne", "Silver Water", "Simcoe", "Sioux Lookout", "Sioux Narrows", "Six Nations of the Grand River", "Smiths Falls", "Smithville", "Smooth Rock Falls", "Snelgrove", "Sombra", "South Mountain", "South River", "Southampton", "Spanish", "Sparta", "Spencerville", "Sprucedale", "St. Catharines", "St. Charles", "St. Clements", "St. Davids", "St. George", "St. Isidore de Prescott", "St. Jacobs", "St. Marys", "St. Regis", "St. Thomas", "Stayner", "St-Eugene", "Stevensville", "Stewarttown", "Stirling", "Stoke`s Bay", "Stoney Creek", "Stoney Point", "Stouffville", "Straffordville", "Stratford", "Strathroy", "Stratton", "Streetsville", "Stroud", "Sturgeon Falls", "Sudbury", "Sultan", "Summer Beaver", "Sunderland", "Sundridge", "Sutton", "Swastika", "Sydenham", "Tamworth", "Tara", "Tavistock", "Taylor Corners", "Tecumseh", "Teeswater", "Temagami", "Terrace Bay", "Thamesford", "Thamesville", "The Eabametoong (Fort Hope) Fi", "Thedford", "Thessalon", "Thessalon First Nation", "Thornbury", "Thorndale", "Thorne", "Thornhill", "Thorold", "Thunder Bay", "Thurlow", "Tilbury", "Tillsonburg", "Timmins", "Tiverton", "Tobermory", "Toledo", "Toronto", "Toronto Island", "Tottenham", "Trenton", "Trout Creek", "Trowbridge", "Tweed", "Udora", "Uniondale", "Unionville", "Upsala", "Utterson", "Uxbridge", "Valley East", "Vanier", "Vankleek Hill", "Vaughan", "Vermilion Bay", "Verner", "Verona", "Victoria", "Vineland", "Virginiatown", "Wabigoon", "Wainfleet", "Walden", "Walkerton", "Wallaceburg", "Wapekeka First Nation", "Wardsville", "Warkworth", "Warren", "Wasaga Beach", "Waterdown", "Waterford", "Waterloo", "Watford", "Waubaushene", "Wawa", "Webbwood", "Webequie", "Welcome", "Welland", "Wellandport", "Wellesley", "Wellington", "West Guilford", "West Lincoln", "West Lorne", "Westmeath", "Westport", "Westree", "Wheatley", "Whitby", "Whitchurch-Stouffville", "White River", "Whitefish", "Whitefish Falls", "Whitefish River First Nation", "Whitney", "Wiarton", "Wikwemikong", "Wilberforce", "Williamsburg", "Winchester", "Windermere", "Windsor", "Wingham", "Winona", "Woodbridge", "Woodstock", "Woodville", "Wooler", "Wunnummin Lake", "Wyoming", "Yarker", "York", "Zurich", "Alberton", "Bedeque", "Borden", "Cardigan", "Charlottetown", "Cornwall", "Covehead", "Crapaud", "East Point", "Eldon", "Georgetown", "Hunter River", "Kensington", "Montague", "Morell", "Mount Stewart", "Murray River", "New Haven", "New London", "O`Leary", "Rusticoville", "Souris", "South Lake", "St. Peters", "Stratford", "Summerside", "Tignish", "Tyne Valley", "Vernon River", "Wellington", "Abercorn", "Acton Vale", "Adamsville", "Aguanish", "Albanel", "Alma", "Alouette", "Amos", "Amqui", "Angliers", "Anjou", "Anse-Saint-Jean", "Armagh", "Arundel", "Asbestos", "Ascot", "Ascot Corner", "Ashuapmushuan", "Aston-Jonction", "Ayer`s Cliff", "Aylmer", "Bagotville", "Baie-Comeau", "Baie-d`Urfe", "Baie-de-Shawinigan", "Baie-des-Sables", "Baie-du-Febvre", "Baie-Johan-Beetz", "Baie-Sainte-Catherine", "Baie-St-Paul", "Baie-Trinite", "Barachois", "Barkmere", "Barraute", "Batiscan", "Beaconsfield", "Beaucanton", "Beauceville", "Beauharnois", "Beaulac-Garthby", "Beaumont", "Beauport", "Beaupre", "Becancour", "Bedford", "Belle Neige", "Bellefeuille", "Belleterre", "Beloeil", "Bergeronnes", "Berthierville", "Betsiamites", "Biencourt", "Bishopton", "Black Lake", "Blainville", "Blanc-Sablon", "Boisbriand", "Boischatel", "Bois-des-Filion", "Bonaventure", "Bonne-Esperance", "Boucherville", "Bouchette", "Breakeyville", "Brigham", "Brome", "Bromont", "Bromptonville", "Brossard", "Brownsburg", "Bryson", "Buckingham", "Bury", "Cabano", "Cacouna", "Cadillac", "Calumet", "Campbell`s Bay", "Candiac", "Cantley", "Cap-a-l`Aigle", "Cap-aux-Meules", "Cap-Chat", "Cap-de-la-Madeleine", "Cap-des-Rosiers", "Caplan", "Cap-Rouge", "Cap-Saint-Ignace", "Carignan", "Carillon", "Carleton", "Causapscal", "Chambly", "Chambord", "Champlain", "Chandler", "Chapais", "Chapeau", "Charette", "Charlemagne", "Charlesbourg", "Charlevoix", "Charny", "Chartierville", "Chateauguay", "Chateau-Richer", "Chelsea", "Cheneville", "Chesterville", "Chevery", "Chibougamau", "Chicoutimi", "Chisasibi", "Chomedey", "Chute-aux-Outardes", "Chute-des-Passes", "Clericy", "Clermont", "Cloridorme", "Clova", "Coaticook", "Colombier", "Compton", "Contrecoeur", "Cookshire", "Coteau-du-Lac", "Cote-St-Luc", "Courcelette", "Courcelles", "Cowansville", "Crabtree", "Danville", "Daveluyville", "Deauville", "Degelis", "Delisle", "Delson", "Desbiens", "Deschaillons-sur-Saint-Laurent", "Deux-Montagnes", "Disraeli", "Dolbeau-Mistassini", "Dollard-des-Ormeaux", "Donnacona", "Dorval", "Drummondville", "Dubuisson", "Dunham", "Duparquet", "Dupuy", "Duvernay", "East Angus", "East Broughton", "East Farnham", "East Hereford", "Eastmain", "Eastman", "Entrelacs", "Esterel", "Evain", "Fabre", "Fabreville", "Falardeau", "Farnham", "Fassett", "Ferland", "Ferme-Neuve", "Fermont", "Fleurimont", "Forestville", "Fort-Coulonge", "Fortierville", "Fossambault-sur-le-Lac", "Frampton", "Franklin Centre", "Frelighsburg", "Fugereville", "Gaspe", "Gatineau", "Gentilly", "Girardville", "Godbout", "Gracefield", "Granby", "Grande-Entree", "Grande-Riviere", "Grandes-Bergeronnes", "Grandes-Piles", "Grande-Vallee", "Grand-Mere", "Grand-Remous", "Greenfield Park", "Grenville", "Guigues", "Hammond", "Ham-Nord", "Hampstead", "Harrington Harbour", "Havre-Aubert", "Havre-aux-Maisons", "Havre-St-Pierre", "Hebertville", "Hebertville-Station", "Hemmingford", "Henryville", "Howick", "Hudson", "Hull", "Huntingdon", "Iberville", "Ile-aux-Coudres", "Iles-de-la-Madeleine", "Inukjuak", "Inverness", "Joliette", "Jonquiere", "Joutel", "Kangiqsualujjuaq", "Kangirsuk", "Kateville", "Kazabazua", "Kingsbury", "Kingsey Falls", "Kirkland", "Knowlton", "Kuujjuaq", "L`Acadie", "L`Ancienne-Lorette", "L`Ange-Gardien", "L`Annonciation", "L`Assomption", "L`Avenir", "L`Epiphanie", "L`Ile-Aux-Noix", "L`Ile-Bizard", "L`Ile-Cadieux", "L`Ile-d`Entree", "L`Ile-Dorval", "L`Ile-Perrot", "L`Île-Verte", "L`Islet", "La Baie", "La Corne", "La Dore", "La Grande", "La Guadeloupe", "La Malbaie", "La Martre", "La Minerve", "La Patrie", "La Plaine", "La Pocatiere", "La Prairie", "La Reine", "La Romaine", "La Sarre", "La Tuque", "Labelle", "Lac Kenogami", "Lac-au-Saumon", "Lac-aux-Sables", "Lac-Bouchette", "Lac-Brome", "Lac-Delage", "Lac-des-Ecorces", "Lac-Drolet", "Lac-du-Cerf", "Lac-Edouard", "Lac-Etchemin", "Lac-Frontiere", "Lachenaie", "Lachine", "Lachute", "Lacolle", "Lac-Poulin", "Lac-Saguay", "Lac-Sergent", "Lac-St-Joseph", "Lafontaine", "Lake Megantic", "Lambton", "Lanoraie", "LaSalle", "Laterriere", "Latulipe", "Laurentides", "Laurier-Station", "Laurierville", "Laval", "Laval des Rapides", "Laval Ouest", "Lavaltrie", "Laverlochere", "Lawrenceville", "Le Bic", "Le Gardeur", "Lebel-sur-Quevillon", "Leclercville", "LeMoyne", "Lennoxville", "Lery", "Les Boules", "Les Cedres", "Les Coteaux", "Les Eboulements", "Les Escoumins", "Les Mechins", "Levis", "Longueuil", "Loretteville", "Lorraine", "Lorrainville", "Louiseville", "Lourdes de Blanc Sablon", "Louvicourt", "Low", "Luceville", "Luskville", "Lyster", "Macamic", "Magog", "Malartic", "Manic-Cinq", "Maniwaki", "Manouane", "Manseau", "Mansonville", "Maple Grove", "Maria", "Marieville", "Marsoui", "Mascouche", "Maskinonge", "Masson-Angers", "Massueville", "Mastigouche", "Matagami", "Matane", "Matapedia", "Mcmasterville", "Melbourne", "Mellin", "Melocheville", "Mercier", "Metabetchouan", "Metis-sur-Mer", "Mirabel", "Mistassini", "Moisie", "Mont Bechervaise", "Mont St Grégoire", "Montebello", "Mont-Joli", "Mont-Laurier", "Mont-Louis", "Montmagny", "Montreal", "Montreal - Est", "Montréal - Nord", "Montréal - Ouest", "Mont-Rolland", "Mont-Royal", "Mont-St-Hilaire", "Mont-St-Pierre", "Mont-Tremblant", "Morin-Heights", "Murdochville", "Mutton Bay", "Nantes", "Napierville", "Natashquan", "Nedelec", "Neuville", "New Carlisle", "New Glasgow", "New Richmond", "Newport", "Nicolet", "Norbertville", "Normandin", "Normetal", "North Hatley", "Notre Dame de Bonsecours", "Notre Dame De L`Ile Perrot", "Notre Dame de Lourdes", "Notre Dame des Laurentides", "Notre Dame Des Prairies", "Notre Dame Du Portage", "Notre-Dame-de-la-Paix", "Notre-Dame-de-la-Salette", "Notre-Dame-de-Stanbridge", "Notre-Dame-du-Bon-Conseil", "Notre-Dame-du-Lac", "Notre-Dame-du-Laus", "Notre-Dame-du-Nord", "Nouvelle", "Oka", "Omerville", "Orford", "Ormstown", "Otterburn Park", "Outremont", "Palmarolle", "Papineauville", "Parent", "Perce", "Peribonka", "Perkins", "Petite-Riviere-St-Francois", "Philipsburg", "Pierrefonds", "Pierreville", "Pincourt", "Pintendre", "Plaisance", "Plessisville", "Pohenegamook", "Pointe Aux Trembles", "Pointe-a-la-Croix", "Pointe-au-Pere", "Pointe-aux-Outardes", "Pointe-Calumet", "Pointe-Claire", "Pointe-des-Cascades", "Pointe-des-Monts", "Pointe-Fortune", "Pointe-Lebel", "Pontiac", "Pont-Rouge", "Pont-Viau", "Portage-du-Fort", "Port-Cartier", "Port-Daniel", "Port-Menier", "Portneuf", "Poste-de-la-Baleine", "Prevost", "Price", "Princeville", "Puvirnituq", "Quebec", "Quyon", "Radisson", "Rawdon", "Remigny", "Repentigny", "Réserve faunique de Rimouski", "Réserve faunique la Vérendrye", "Réserves fauniques de Matane e", "Richelieu", "Richmond", "Rigaud", "Rimouski", "Rimouski-Est", "Ripon", "Riviere-a-Pierre", "Riviere-au-Renard", "Riviere-au-Tonnerre", "Riviere-Beaudette", "Riviere-Bleue", "Riviere-du-Loup", "Riviere-Heva", "Riviere-St-Jean", "Robertsonville", "Roberval", "Rochebaucourt", "Rock Forest", "Rollet", "Rosemere", "Rougemont", "Rouyn-Noranda", "Roxboro", "Roxton Falls", "Roxton Pond", "Sabrevois", "Sacre Coeur", "Saint Alexandre D`Iberville", "Saint Alphonse de Granby", "Saint Amable", "Saint Antoine Des Laurentides", "Saint Antoine Sur Richelieu", "Saint Antonin", "Saint Athanase", "Saint Calixte", "Saint Charles Borromee", "Saint Charles Sur Richelieu", "Saint Christophe D`Arthabaska", "Saint Colomban", "Saint Denis De Brompton", "Saint Denis Sur Richelieu", "Saint Esprit", "Saint Etienne de Beauharnois", "Saint Etienne de Lauzon", "Saint Gerard Majella", "Saint Isidore de la Prairie", "Saint Jean Baptiste", "Saint Jean D`Orleans", "Saint Joachim", "Saint Joseph De La Pointe De L", "Saint Laurent D`Orleans", "Saint Lazare De Vaudreuil", "Saint Lin Laurentides", "Saint Marc Sur Richelieu", "Saint Mathias Sur Richelieu", "Saint Mathieu de Beloeil", "Saint Mathieu de la Prairie", "Saint Maurice", "Saint Norbert D`Arthabaska", "Saint Paul D`Industrie", "Saint Philippe", "Saint Pierre D`Orleans", "Saint Robert", "Saint Roch De L`Achigan", "Saint Roch De Richelieu", "Saint Sulpice", "Saint Thomas", "Saint Urbain Premier", "Saint Valere", "Saint Victoire de Sorel", "Saint-Alexis-de-Montcalm", "Saint-Côme", "Saint-Donat", "Sainte Angele De Monnoir", "Sainte Ann De Sorel", "Sainte Brigide D`Iberville", "Sainte Cecile De Milton", "Sainte Dorotheé", "Sainte Famille", "Sainte Marie Salome", "Sainte Marthe Du Cap", "Sainte Sophie", "Sainte Therese De Blainville", "Saint-Élie", "Saint-Élie-d`Orford", "Saint-Ferdinand", "Saint-Ferréol-les-neiges", "Saint-Hubert", "Saint-Hyacinthe", "Saint-Michel-des-Saints", "Salaberry-de-Valleyfield", "Salluit", "Sanmaur", "Sault-au-Mouton", "Sawyerville", "Sayabec", "Schefferville", "Scotstown", "Senneterre", "Senneville", "Sept-Iles", "Shawbridge", "Shawinigan", "Shawinigan-Sud", "Shawville", "Shefford", "Sherbrooke", "Shigawake", "Shipshaw", "Sillery", "Sorel-Tracy", "Squatec", "St. Ambroise de Chicoutimi", "St. Basile de Portneuf", "St. Bernard de Dorchester", "St. Come de Kennebec", "St. Edouard de Frampton", "St. Fabien de Rimouski", "St. Ferdinand d`Halifax", "St. Fidele", "St. Gabriel de Rimouski", "St. Gedeon de Beauce", "St. Gregoire de Nicolet", "St. Henri de Levis", "St. Honore", "St. Leon De Chic.", "St. Martin de Beauce", "St. Moise", "St. Raphael de Bellechasse", "St. Sebastien", "St. Stanislas de Champlain", "St. Theodore de Chertsey", "St. Victor de Beauce", "St. Vincent de Paul", "St-Adelphe", "St-Adolphe-d`Howard", "St-Adolphe-de-Dudswell", "St-Agapit", "St-Aime", "St-Albert", "St-Alexandre-de-Kamouraska", "St-Alexis-de-Matapedia", "St-Alexis-des-Monts", "St-Alphonse-Rodriguez", "St-Andre", "St-Andre-Avellin", "St-Andre-du-Lac-St-Jean", "St-Andre-Est", "St-Anselme", "Stanstead", "St-Antoine", "St-Antoine-de-Tilly", "St-Apollinaire", "St-Augustin-de-Desmaures", "St-Barnabe", "St-Barthelemy", "St-Basile-le-Grand", "St-Basile-Sud", "St-Blaise-sur-Richelieu", "St-Boniface-de-Shawinigan", "St-Bruno", "St-Bruno-de-Montarville", "St-Calixte-de-Kilkenny", "St-Casimir", "St-Celestin", "St-Cesaire", "St-Charles-de-Bellechasse", "St-Chrysostome", "St-Clet", "St-Constant", "St-Cyrille-de-Wendover", "St-Damase", "St-Damien-de-Buckland", "St-Denis", "Ste. Agathe de Lotbiniere", "Ste. Angele de Laval", "Ste. Cecile Masham", "Ste. Claire de Dorchester", "Ste. Croix de Lotbiniere", "Ste. Gertrude", "Ste. Justine de Newton", "Ste. Martine", "Ste. Methode de Frontenac", "Ste. Monique de Nicolet", "Ste-Adele", "Ste-Agathe", "Ste-Agathe-des-Monts", "Ste-Agathe-Sud", "Ste-Anne-de-Beaupre", "Ste-Anne-de-Bellevue", "Ste-Anne-de-la-Perade", "Ste-Anne-de-Portneuf", "Ste-Anne-des-Monts", "Ste-Anne-des-Plaines", "Ste-Anne-du-Lac", "Ste-Blandine", "Ste-Brigitte-de-Laval", "Ste-Catherine", "Ste-Clotilde-de-Horton", "St-Edouard-de-Lotbiniere", "Ste-Eulalie", "Ste-Felicite", "Ste-Foy", "Ste-Genevieve", "Ste-Helene-de-Bagot", "Ste-Henedine", "Ste-Jeanne-d`Arc", "Ste-Julie", "Ste-Julie-de-Vercheres", "Ste-Julienne", "Ste-Justine", "St-Eleuthere", "Ste-Lucie-de-Beauregard", "Ste-Madeleine", "Ste-Marguerite", "Ste-Marie-de-Beauce", "Ste-Marie-de-Blandford", "Ste-Marthe", "Ste-Marthe-sur-le-Lac", "St-Emile", "St-Emile-de-Suffolk", "Ste-Perpetue", "Ste-Petronille", "St-Ephrem-de-Beauce", "St-Ephrem-de-Tring", "Ste-Rosalie", "Ste-Rose", "Ste-Rose-de-Watford", "Ste-Rose-du-Nord", "Ste-Sophie-de-Levrard", "Ste-Thecle", "Ste-Therese", "St-Eugene-de-Guigues", "St-Eustache", "Ste-Veronique", "Ste-Victoire", "St-Fabien-de-Panet", "St-Felicien", "St-Felix-de-Kingsey", "St-Felix-de-Valois", "St-Fidele-de-Mont-Murray", "St-Flavien", "St-Francois-du-Lac", "St-Fulgence", "St-Gabriel", "St-Gabriel-de-Brandon", "St-Gedeon", "St-Georges", "St-Georges-de-Beauce", "St-Georges-de-Cacouna", "St-Gerard", "St-Germain-de-Grantham", "St-Gregoire-de-Greenlay", "St-Guillaume", "St-Hilarion", "St-Hippolyte", "St-Honore-de-Beauce", "St-Honore-de-Chicoutimi", "St-Hugues", "St-Irenee", "St-Jacques", "St-Jean-Chrysostome", "St-Jean-de-Dieu", "St-Jean-de-Matha", "St-Jean-Port-Joli", "St-Jean-sur-Richelieu", "St-Jerome", "St-Joseph-de-Beauce", "St-Joseph-de-la-Rive", "St-Joseph-de-Sorel", "St-Jovite", "St-Jude", "St-Just-de-Bretenieres", "St-Lambert", "St-Lambert-de-Lauzon", "St-Laurent", "St-Leonard", "St-Leonard-d`Aston", "St-Leon-le-Grand", "St-Liboire", "St-Lin", "St-Louis-de-France", "St-Luc", "St-Ludger", "St-Magloire", "St-Malachie", "St-Malo", "St-Marc-des-Carrieres", "St-Methode-de-Frontenac", "St-Michel-de-Bellechasse", "St-Moose", "St-Nazaire-d`Acton", "St-Nicolas", "St-Noel", "St-Odilon-de-Cranbourne", "Stoke", "Stoneham", "St-Ours", "St-Pacome", "St-Pamphile", "St-Pascal", "St-Patrice-de-Beaurivage", "St-Paul-d`Abbotsford", "St-Paul-de-Montminy", "St-Paulin", "St-Philippe-de-Neri", "St-Pie", "St-Pie-de-Guire", "St-Pierre", "St-Pierre-de-Wakefield", "St-Pierre-les-Becquets", "St-Polycarpe", "St-Prime", "St-Prosper-de-Dorchester", "Stratford", "St-Raymond", "St-Redempteur", "St-Remi", "St-Rene-de-Matane", "St-Roch-de-Mekinac", "St-Roch-des-Aulnaies", "St-Romuald", "St-Sauveur", "St-Sauveur-des-Monts", "St-Simeon", "St-Simon-de-Bagot", "St-Simon-de-Rimouski", "St-Sylvere", "St-Sylvestre", "St-Theophile", "St-Thomas-d`Aquin", "St-Timothee", "St-Tite", "St-Tite-des-Caps", "St-Ubalde", "Stukely-Sud", "St-Ulric", "St-Urbain", "St-Victor", "St-Wenceslas", "St-Zacharie", "St-Zenon", "St-Zephirin", "St-Zotique", "Sutton", "Tadoussac", "Taschereau", "Tasiujaq", "Temiscaming", "Terrasse Vaudreuil", "Terrebonne", "Tete-a-la-Baleine", "Thetford Mines", "Thurso", "Tingwick", "Tremblay", "Tring-Jonction", "Trois-Pistoles", "Trois-Rivieres", "Umiujaq", "Upton", "Val-Alain", "Val-Barrette", "Val-Belair", "Val-Brillant", "Valcartier", "Valcourt", "Val-d`Or", "Val-David", "Val-des-Bois", "Vallee-Jonction", "Vanier", "Varennes", "Vaudreuil", "Vaudreuil Dorion", "Vaudreuil-sur-le-Lac", "Venise-en-Quebec", "Vercheres", "Verdun", "Victoriaville", "Ville-Marie", "Vimont", "Wakefield", "Warden", "Warwick", "Waskaganish", "Waswanipi", "Waterloo", "Waterville", "Weedon", "Weedon Centre", "Wemindji", "Wendover", "West Brome", "Westbury", "Westmount", "Wickham", "Windsor", "Woburn", "Wotton", "Yamachiche", "Yamaska", "Yamaska-Est", "Abbey", "Aberdeen", "Abernethy", "Alameda", "Alida", "Allan", "Alsask", "Alvena", "Aneroid", "Arborfield", "Archerwill", "Arcola", "Asquith", "Assiniboia", "Avonlea", "Balcarres", "Balgonie", "Battleford", "Beauval", "Beechy", "Bengough", "Bethune", "Bienfait", "Big River", "Biggar", "Birch Hills", "Birsay", "Blaine Lake", "Borden", "Bredenbury", "Briercrest", "Broadview", "Brock", "Bruno", "Buchanan", "Buffalo Narrows", "Burstall", "Cabri", "Cadillac", "Calder", "Canoe Narrows", "Canora", "Canwood", "Carievale", "Carlyle", "Carnduff", "Caron", "Carrot River", "Central Butte", "Ceylon", "Chaplin", "Choiceland", "Christopher Lake", "Churchbridge", "Clavet", "Climax", "Cochin", "Coderre", "Coleville", "Colonsay", "Conquest", "Consul", "Coronach", "Craik", "Creelman", "Creighton", "Cudworth", "Cumberland House", "Cupar", "Cut Knife", "Dalmeny", "Davidson", "Debden", "Delisle", "Denzil", "Dillon", "Dinsmore", "Dodsland", "Domremy", "Drake", "Dubuc", "Duck Lake", "Dundurn", "Dysart", "Earl Grey", "Eastend", "Eatonia", "Edam", "Elbow", "Elfros", "Elrose", "Esterhazy", "Estevan", "Eston", "Eyebrow", "Fillmore", "Fleming", "Foam Lake", "Fond-du-Lac", "Fort Qu`Appelle", "Fox Valley", "Francis", "Frobisher", "Frontier", "Gainsborough", "Glaslyn", "Glen Ewen", "Glenavon", "Goodeve", "Goodsoil", "Govan", "Gravelbourg", "Grayson", "Green Lake", "Grenfell", "Gull Lake", "Hafford", "Hague", "Hanley", "Harris", "Hawarden", "Hazlet", "Hepburn", "Herbert", "Herschel", "Hodgeville", "Holdfast", "Hudson Bay", "Humboldt", "Ile-a-la-Crosse", "Imperial", "Indian Head", "Invermay", "Ituna", "Jansen", "Kamsack", "Kelliher", "Kelvington", "Kenaston", "Kennedy", "Kenosee", "Kerrobert", "Key Lake", "Kincaid", "Kindersley", "Kinistino", "Kipling", "Kisbey", "Kyle", "La Loche", "La Ronge", "Lafleche", "Laird", "Lake Alma", "Lake Lenore", "Lampman", "Landis", "Lang", "Langenburg", "Langham", "Lanigan", "Lashburn", "Leader", "Leask", "Lemberg", "Leoville", "Leroy", "Lestock", "Liberty", "Limerick", "Lintlaw", "Lipton", "Lloydminster", "Loon Lake", "Loreburn", "Lucky Lake", "Lumsden", "Luseland", "Macklin", "Macrorie", "Maidstone", "Mankota", "Manor", "Maple Creek", "Marcelin", "Margo", "Marquis", "Marsden", "Marshall", "Martensville", "Maryfield", "Maymont", "Meacham", "Meadow Lake", "Meath Park", "Melfort", "Melville", "Meota", "Midale", "Middle Lake", "Milden", "Milestone", "Minton", "Mistatim", "Molanosa", "Montmartre", "Moose Jaw", "Moosomin", "Morse", "Mortlach", "Mossbank", "Naicam", "Neidpath", "Neilburg", "Neudorf", "Neville", "Nipawin", "Nokomis", "Norquay", "North Battleford", "North Portal", "Odessa", "Ogema", "Ormiston", "Osler", "Outlook", "Oxbow", "Paddockwood", "Pangman", "Paradise Hill", "Patuanak", "Paynton", "Pelican Narrows", "Pelly", "Pennant", "Pense", "Perdue", "Piapot", "Pierceland", "Pilot Butte", "Pinehouse", "Plato", "Plenty", "Ponteix", "Porcupine Plain", "Preeceville", "Prelate", "Prince Albert", "Prud`homme", "Punnichy", "Qu`Appelle", "Quill Lake", "Rabbit Lake", "Radisson", "Radville", "Raymore", "Redvers", "Regina", "Regina Beach", "Rhein", "Riceton", "Richmound", "Ridgedale", "Riverhurst", "Rocanville", "Rockglen", "Rose Valley", "Rosetown", "Rosthern", "Rouleau", "Saltcoats", "Sandy Bay", "Saskatoon", "Sceptre", "Scott", "Sedley", "Semans", "Shaunavon", "Sheho", "Shell Lake", "Shellbrook", "Simpson", "Sintaluta", "Smeaton", "Smiley", "Southend", "Southey", "Spalding", "Speers", "Spiritwood", "Springside", "Spy Hill", "St. Benedict", "St. Brieux", "St. Gregor", "St. Louis", "St. Walburg", "Stanley Mission", "Star City", "Stockholm", "Stony Rapids", "Storthoaks", "Stoughton", "Strasbourg", "Strongfield", "Sturgis", "Swift Current", "Tantallon", "Theodore", "Tisdale", "Togo", "Tompkins", "Torquay", "Tramping Lake", "Tribune", "Turnor Lake", "Turtleford", "Unity", "Uranium City", "Val Marie", "Vanguard", "Vanscoy", "Vibank", "Viscount", "Vonda", "Wadena", "Wakaw", "Waldheim", "Wapella", "Warman", "Waskesiu Lake", "Watrous", "Watson", "Wawota", "Webb", "Welwyn", "Weyburn", "White Fox", "Whitewood", "Wilcox", "Wilkie", "Willow Bunch", "Windthorst", "Wiseton", "Wishart", "Wollaston Lake", "Wolseley", "Wood Mountain", "Wynyard", "Yellow Creek", "Yellow Grass", "Yorkton", "Young", "Zealandia", "Zenon Park", "Beaver Creek", "Burwash Landing", "Carcross", "Carmacks", "Dawson", "Destruction Bay", "Faro", "Haines Junction", "Marsh Lake", "Mayo", "Old Crow", "Pelly Crossing", "Ross River", "Swift River", "Tagish", "Teslin", "Watson Lake", "Whitehorse"]
  streetAddresses = ["140 Hawk Ave", "120 Hawk Ave", "200 Hawk Ave", "101-109 Eagle Crescent", "100-108 Falcon St", "120 Eagle Crescent", "200 Hawk Ave", "102 Owl St", "128 Eagle Crescent", "140 Eagle Crescent", "107 Jay St", "147 Eagle Crescent", "400-500 Spray Ave", "400-500 Spray Ave", "201 Spring Crescent", "302 Glen Ave", "Rundle Ave", "110 Lougheed Cir", "117-129 Spray Ave", "109-115 Spray Ave", "121-145 Kootenay Ave", "121-145 Kootenay Ave", "221-247 Kluane Dr", "221-247 Kluane Dr", "120-226 Nahanni Dr", "211 Kluane Dr", "117-119 Nahanni Dr", "102 Nahanni Dr", "200-210 Jasper Way", "221-247 Jasper Way", "117-127 Glacier Dr", "115-143 Park Ave", "109-115 Spray Ave", "114-136 Park Ave", "111-123 Glen Ave", "200-224 Glen Ct", "521-565 Buffalo St", "111-123 Glen Ave", "101 Spray Ave", "101 Birch Ave", "Mountain Ave", "105-109 Cave Ave", "100-108 Cave Ave", "100-108 Cave Ave", "254 Jasper Way", "100-108 Cave Ave", "Sundance Rd", "97 Banff Ave", "110 Bear St", "206 Buffalo St", "313-325 Buffalo St", "103 Beaver St", "501-513 Buffalo St", "521-565 Buffalo St", "101-103 St Julien Way", "100 St Julien Rd", "204-220 St Julien Rd", "132-138 St Julien Rd", "Wolverine St", "117-139 Grizzly St", "117-139 Grizzly St", "112-138 Otter St", "112-138 Otter St", "103-137 Beaver St", "103-137 Beaver St", "103-137 Beaver St", "110-138 Muskrat St", "110-138 Muskrat St", "138 Bear St", "110 Bear St", "202-230 Bow Ave", "302-324 Squirrel St", "Wolf St", "311 Marten St", "Wolf St", "210-220 Bear St", "229 Banff Ave", "202-230 Muskrat St", "446-448 Wolf St", "337-349 Beaver St", "201-229 Beaver St", "Wolf St", "Wolf St", "330 Banff Ave", "215-223 Grizzly St", "341-349 Grizzly St", "Moose St", "202-228 Otter St", "229 Otter St", "328-348 Muskrat St", "229 Otter St", "402-452 Muskrat St", "402-452 Muskrat St", "Moose St", "415 Beaver St", "337-349 Beaver St", "330-400 Banff Ave", "", "Moose St", "Moose St", "333-349 Big Horn St", "322-324 Big Horn St", "402-452 Muskrat St", "201-209 Caribou St", "Hidden Ridge Way", "Hidden Ridge Way", "402-452 Muskrat St", "332 Squirrel St", "332 Squirrel St", "302-324 Squirrel St", "311-323 Marten St", "343 Marten St", "Railway Ave", "Elk St", "Railway Ave", "407 Cougar St", "402-422 Squirrel St", "402-422 Squirrel St", "417 Marten St", "453 Marten St", "440 Cougar St", "Deer St", "508-522 Banff Ave", "Fox St", "501-519 Cougar St", "501-519 Cougar St", "161-173 Marmot Crescent", "175-183 Marmot Crescent", "516-540 Deer St", "234-250 Marmot Crescent", "212-220 Marmot Pl", "193-195 Marmot Crescent", "400-500 Spray Ave", "400-500 Spray Ave", "400-500 Spray Ave", "139 Rainbow Ave", "St Julien Rd", "St Julien Rd", "Mountain Ave", "105-109 Cave Ave", "101 Cave Ave", "100 St Julien Rd", "121 Cave Ave", "St Julien Rd", "St Julien Rd", "339 Mountain Goat Ln", "Mt Norquay Rd", "Mt Norquay Rd", "10-30 Whiskey Jack Crescent", "Fox St", "10-30 Whiskey Jack Crescent", "Porcupine Pl", "193-195 Marmot Crescent", "555 Banff Ave", "555 Banff Ave", "555 Banff Ave", "450-454 Banff Ave", "415 Beaver St", "555 Banff Ave", "", "513 Banff Ave", "440 Cougar St", "417 Cougar Pl", "449-459 Banff Ave", "327 Caribou St", "Mountain Ave", "Mountain Ave", "Middle Springs Dr", "101-115 Middle Springs Dr", "116 Middle Springs Dr", "201-207 Middle Springs Dr", "Hidden Ridge Way", "Hidden Ridge Way", "224-254 Jasper Way", "34 Fairholme Pl", "208-218 Middle Springs Dr", "121-145 Kootenay Ave", "300-334 Middle Springs Dr", "335 Middle Springs Dr", "22 Sundance Ct", "141 Cave Ave", "Marmot St", "230 Lynx St", "701 Tunnel Mountain Rd", "190 Tunnel Mountain Dr", "190 Tunnel Mountain Dr", "121-137 Lynx St", "", "300 Mountain Ave", "300 Mountain Ave", "", "102 Birch Ave", "102 Birch Ave", "190 Tunnel Mountain Dr", "555 Banff Ave", "Hidden Ridge Way", "502 Tunnel Mountain Rd", "109 Spray Ave", "214-300 Banff Ave", "214-300 Banff Ave", "202-214 Banff Ave", "118 Banff Ave", "120 Banff Ave", "138 Banff Ave", "Hidden Ridge Way", "Hidden Ridge Way", "190 Tunnel Mountain Dr", "2-16 Otter Ln", "526-528 Cougar St", "400 Spray Ave", "400 Spray Ave", "331-335 Lynx St", "140 Hawk Ave", "427 Marten St", "4-18 Riverview Ct", "110 St Julien Way", "107 Tunnel Mountain Dr", "2-34 Fairholme Pl", "1-17 Otter Ln", "32 Antelope Ln", "St Julien Rd", "121 Cave Ave", "500 Spray Ave", "Trans-Canada Hwy", "Tunnel Mountain Rd", "Tunnel Mountain Rd", "Tunnel Mountain Rd", "Tunnel Mountain Rd", "Tunnel Mountain Rd", "Tunnel Mountain Rd", "Tunnel Mountain Rd", "Tunnel Mountain Rd", "Tunnel Mountain Rd", "32 Antelope Ln"]
  $.fn.icon = function(option){
	this.append("<i class='icon-" + option + "'></i>")

	return this
  }
  function setIcons1(){
	$('#signup').icon('plus')
	$('#login').icon('signin')
	if(opera){
	  $('.icon-signin, .icon-plus').css('margin-top', '-31px')
	  $('.icon-facebook').css('margin-top', '3px')
	}
  }
  setIcons1()
  function adjustHeight(identifier, value){$(identifier).css('height', value)}
  function adjustMapHeight(value){
	$('#map').height(value)
	google.maps.event.trigger(map, 'resize')
  }
  function _opera(){
	$('.icon-plus, .icon-signin').css('margin-top', '-31px')
	$('.icon-facebook').css('margin-top', '3px')
	$('#extrusion').css('margin-top', '-32px')
	adjustMapHeight($('.sidebar').height()-2)
	$('.control-group').css('margin-bottom','0px')
	if(!mobile){$('.icon-filter').css('margin-top', '5px')}
	$('#log-in, #signup1').css('height', '30px')
  }
  if(mozilla){$('#stat1').css('margin-left', '55px')}
  if(iPad || iPhone){
	$('#stat1').css('margin-left', '49px')
	$('.icon-filter').css('margin-top', '5px')
  }
  function setIcons(){
	$('#sms-referral').icon('comment-alt')
	$('#email-referral').icon('envelope')
	$('#send_referral').icon('share-alt')
  }
  function search(){
	$('#edit_profile_link').icon('pencil')
	$('#sign-out-link').icon('signout')
	$('#address').typeahead({source: streetAddresses})
	mobile ? $('#map').css('width', $('#map').width()-3) : setIcons()
	$('#find').icon('search')
  }
  if(mobile){
	setIcons()
	if(opera || iPad){adjustMapHeight($(window).height())}
  }
  function _webkit(){
	$('#user-email-label, #city-label, #user_email_edit_label').css('margin-top','15px')
	$('#user-remember-me').css('margin-top','2px')
	$('.required-password').css('margin-bottom','21px')
	$('.modal-header').css('margin-bottom','-15px')
	$("#tos [class='modal-body']").css('margin-top', '15px')
	if(!mobile && chrome){$('#email-referral').css('margin-right', '-1px')}
  }
  function _mozilla(){
	$('.icon-plus, .icon-signin').css('margin-top', '-30px')
	$('#extrusion').css('margin-top', '-32px')
  }
  function toggle_lock_icon(element){$(element).live('focusout', function(event){if($(element).val().length == 0 && radio1){$('#test').addClass('icon-lock')}}).live('keydown', function(event){$('#test').removeClass('icon-lock')})}
  function toggle_lock_icon1(element){$(element).live('focusout', function(event){if($(element).val().length == 0){$('#test1').addClass('icon-lock')}}).live('keydown', function(event){$('#test1').removeClass('icon-lock')})}
  toggle_lock_icon('#user_email')
  toggle_lock_icon1('#user_password_confirmation')
  search()
  function slide(){
	$('#test-sidebar').css('-webkit-transform', 'translateX(0)').css('transform', 'translateX(0)').css('-moz-transform', 'translateX(0)').css('-o-transform', 'translateX(0)').show().transition({x: '250px'})
	sidebarVisible = true
	$('.icon-list-ul').css('-webkit-transform', 'translateX(0)').css('transform', 'translateX(0)').css('-moz-transform', 'translateX(0)').css('-o-transform', 'translateX(0)').transition({x: '250px'})
	if(iPad){
      adjustHeight('#test-sidebar', $('#map').height()+2)
	  $('#radio1').hasClass('btn active') ? identifier = '.sidebar' : identifier = '#test-sidebar'
	  adjustMapHeight($(identifier).height()-2)
	}
	if(!iPad){adjustMapHeight($('.sidebar').height()-2)}
	if(mobile && opera){$('.icon-facebook').css('margin-top', '4px')}
  }
  $('.icon-list-ul').click(function(){
    if(!sidebarVisible){
	  $(this).tooltip('hide')
	  slide()
	}
    else{
  	  $('#test-sidebar').transition({x: '0px'}, function(){
        $(this).hide()
  		sidebarVisible = false
  	  })
  	  $(this).transition({x: '0px'})
  	  opera ? value = $(window).height() : value = '100%'
  	  adjustMapHeight(value)
  	}
  })
  $('#download-link').hover(
	function(){
	  $('.icon-download-alt').css('color', '#005580').css('cursor', 'pointer')
	  $(this).css('color', '#005580')
	},
	function(){
	  $('.icon-download-alt').css('color', '#08C')
	  $(this).css('color', '#08C')
	}
  )
  $('.icon-download-alt').hover(
	function(){
	  $('#download-link').css('color', '#005580')
	  $(this).css('color', '#005580').css('cursor', 'pointer')
	},
	function(){
	  $('#download-link').css('color', '#08C')
	  $(this).css('color', '#08C')
	}
  )
  $('.icon-download-alt').live('click', function(){window.location.assign('http://adopt-a-hydrant-banff.herokuapp.com/xml/hydrants.kml')})
  function adjust2(){mobile ? $('.icon-search, .icon-pencil, .icon-signout').css('margin-top','4px') : $('.icon-search, .icon-pencil, .icon-signout').css('margin-top','3px')}
  if(opera){adjust2()}
  $('.alert').live('close', function(){
	$(this).hide()
	if(mobile){
	  iPad ? identifier = '#test-sidebar' : identifier = '.sidebar'
	  adjustMapHeight($(identifier).height()-2)
	}
  })
  $('#locale').live('change', function(){window.location.assign('http://adopt-a-hydrant-banff.herokuapp.com/' + $(this).val())})
  function addMarker(thingId, point, color){
	var image
	color === 'green' ? image = greenMarkerImage : color === 'red' ? image = redMarkerImage : color === 'green1' ? image = green1MarkerImage : color === 'red1' ? image = red1MarkerImage : color === 'green2' ? image = green2MarkerImage : color === 'red2' ? image = red2MarkerImage : null
	var marker = new google.maps.Marker({
	  animation: google.maps.Animation.DROP,
	  icon: image,
	  map: map,
	  optimized:false,
	  position: point,
	  shadow: markerShadowImage
	})	
	google.maps.event.addListener(marker, 'click', function(){
	  if(activeInfoWindow){activeInfoWindow.close()}
	  var infoWindow = new google.maps.InfoWindow({maxWidth: 210})
	  google.maps.event.addListener(infoWindow, 'closeclick', function(){isWindowOpen = false})
	  google.maps.event.addListener(infoWindow, 'domready', function(){
		$("div[style*='width: 247px;'] div:first-child").each(function(){if(!$(this).hasClass('test')){$(this).addClass('test1')}})
    	$("img[src*='http://maps.gstatic.com/mapfiles/mv/imgs8.png']").each(function(){if($(this).parent().hasClass('test1')){$(this).remove()}})
		$('#sms_notifications').icon('comment-alt').tooltip({delay: delayOptions})
		$('#email_notifications').icon('envelope').tooltip({delay: delayOptions})
		$("div[style*='overflow: auto;'], #email_notifications, #sms_notifications, #h2-infowindow, div[style*='overflow-x: auto;'], div[style*='overflow-x: auto;'], #info-window, .group, .sign-in").removeClass('test1')
		$("div[class*='btn-group test1']").removeClass('btn-group test1').addClass('btn-group')
		$('div[style*="width: 247px"]').append("<i id='info-window1' class='icon-remove'></i>")
		if(opera){
		  if(!mobile){$('#info-window i').css('margin-top', '2px')}
		  adjustHeight('#info-window .btn', '18px')
		  $('#info-window1').css('margin-top', '10px').css('margin-left', '224px')
		}
		$('.test1').hover(
		  function(){$("#info-window1[class='icon-remove']").css('color', '#999999')}, 
		  function(){$("#info-window1[class='icon-remove']").css('color', '#cccccc')}
		)
		adjust3()
	  })
	  activeInfoWindow = infoWindow
	  activeThingId = thingId
	  activeMarker = marker
	  $.ajax({
	    type: 'GET',
	    url: '/info_window',
	    data: {'thing_id': thingId},
	    success: function(data){
	      // Prevent race condition, which could lead to multiple windows being open at the same time.
	      if(infoWindow === activeInfoWindow){
		    smsNotifications = false
		    emailNotifications = false
			infoWindow.setContent("<div id='info-window'>" + data + "</div>")
			openInfoWindow(infoWindow, map, marker)
	        isWindowOpen = true
	      }
	    }
	  })
	})
	thingIds.push(thingId)
	return marker
  }
  $('.sign-in').live('click', function(){
	if(mobile){if(!sidebarVisible){slide()}}
	$('#radio2').trigger('click')
	$('#user_email').focus()
  })
  function addMarkersAround(lat, lng, sieveAdopted){
	var submitButton = $("#address_form input[type='submit']")
    $.ajax({
      type: 'GET',
      url: '/things.json',
      data: {
        'utf8': '✓',
        'authenticity_token': $("#address_form input[name='authenticity_token']").val(),
        'lat': lat,
        'lng': lng,
        'limit': $("#address_form input[name='limit']").val()
      },
      error: function(jqXHR){$(submitButton).attr('disabled', false)},
      success: function(data){
        $(submitButton).attr('disabled', false)
        if(data.errors){
          $('#address').parent().addClass('error').focus()
        } else {
          $('#address').parent().removeClass('error')
          var i = -1
          $(data).each(function(index, thing){
            if($.inArray(thing.id, thingIds) === -1){i += 1} 
			else {
              // continue
              return true
            }
            setTimeout(function(){
			  thingSnowCover = thing.snow_cover
              sieveAdopted && !thing.user_id ? thingSnowCover > 6 ? addMarker(thing.id, new google.maps.LatLng(thing.lat, thing.lng), 'red1') : thingSnowCover <= 6 && thingSnowCover > 0 ? addMarker(thing.id, new google.maps.LatLng(thing.lat, thing.lng), 'red2') : addMarker(thing.id, new google.maps.LatLng(thing.lat, thing.lng), 'red') : thing.user_id && !sieveAdopted ? thingSnowCover > 6 ? addMarker(thing.id, new google.maps.LatLng(thing.lat, thing.lng), 'green1') : thingSnowCover <= 6 && thingSnowCover > 0 ? addMarker(thing.id, new google.maps.LatLng(thing.lat, thing.lng), 'green2') : addMarker(thing.id, new google.maps.LatLng(thing.lat, thing.lng), 'green') : thingSnowCover > 6 ? addMarker(thing.id, new google.maps.LatLng(thing.lat, thing.lng), 'red1') : thingSnowCover <= 6 && thingSnowCover > 0 ? addMarker(thing.id, new google.maps.LatLng(thing.lat, thing.lng), 'red2') : addMarker(thing.id, new google.maps.LatLng(thing.lat, thing.lng), 'red')
			}, i * 100)
          })
        }
      }
    })
  }
  google.maps.event.addListener(map, 'dragend', function(){
    var center = map.getCenter()
    addMarkersAround(center.lat(), center.lng(), sieveAdopted)
  })
  google.maps.event.addListener(map.getStreetView(), 'visible_changed', function(){
	if(map.getStreetView().getVisible()){
	  $('#sieve').css('margin-top', '188px').css('margin-left', '35px')
	  $('#sieve1').css('margin-top', '67px')
	  $('#download, .stats-container').hide()
	} else{
	  $('#sieve').css('margin-top', '140px').css('margin-left', '11px')
	  $('#sieve1').css('margin-top', '50px')
	  $('#download, .stats-container').show()
	}
  })
  google.maps.event.addListener(map.getStreetView(), 'position_changed', function(){
	var position = map.getStreetView().getPosition()
    addMarkersAround(position.lat(), position.lng(), sieveAdopted)
  })
  $('#adopted-sieve').tooltip({delay: delayOptions})
  $('#adopted-sieve').click(function(){
    if(sieveAdopted){
	  sieveAdopted = false
	  $(this).attr('title', $('#enable_adopted_sieve').text())
	}
	else{
	  sieveAdopted = true
	  $(this).attr('title', $('#disable_adopted_sieve').text())
	}
	$(this).tooltip('fixTitle').tooltip('show')
  })
  $('input').live('click', function(){focusedInputElement = $(this)})
  window.addEventListener('shake', shakeEventDidOccur, false)
  function shakeEventDidOccur(){focusedInputElement.val('')}
  function stateChange(color){
	if(color != undefined){
	  activeMarker.setMap()
	  activeMarker = addMarker(activeThingId, new google.maps.LatLng(activeMarker.getPosition().lat(), activeMarker.getPosition().lng()), color)
	}
	activeInfoWindow.close()
	openInfoWindow(activeInfoWindow, map, activeMarker)
  }
  function openInfoWindow(infoWindow, map, marker){map.getStreetView().getVisible() ? infoWindow.open(map.getStreetView(), marker) : infoWindow.open(map, marker)}
  function address(){
	var submitButton = $("#address_form input[type='submit']")
    $(submitButton).attr('disabled', true)
    if($('#address').val() === ''){
      $(submitButton).attr('disabled', false)
      $('#address').parent().addClass('error').focus()
    } else {
      $.ajax({
        type: 'GET',
        url: '/address.json',
        data: {
          'utf8': '✓',
          'authenticity_token': $("#address_form input[name='authenticity_token']").val(),
          'city_province': $('#city_province').val(),
          'address': $('#address').val()
        },
        error: function(jqXHR){
          $(submitButton).attr('disabled', false)
          $('#address').parent().addClass('error').focus()
        },
        success: function(data){
          $(submitButton).attr('disabled', false)
          if(data.errors){
            $('#address').parent().addClass('error').focus()
          } else {
            $('#address').parent().removeClass('error')
			addMarkersAround(data[0], data[1])
			if(!map.getStreetView().getVisible()){
	          map.setCenter(new google.maps.LatLng(data[0], data[1]))
	          map.setZoom(19)	
			} else{map.getStreetView().setPosition(new google.maps.LatLng(data[0], data[1]))}
          }
        }
      })
    }
  }
  $('#address_form').live('submit', function(){
	address()
    return false
  })
  $('#find').live('click', function(){
	address()
    return false
  })
  $('#referral').live('show', function(){
    var modal = $(this)
    modal.css('margin-top', -(modal.outerHeight() / 2))
    modal.css('margin-left', -(modal.outerWidth() / 2))
    $('#sms-referral, #email-referral').tooltip({delay: delayOptions})
    $('#sms-referral').attr('title', $('#enable_sms_transmission').text())
    $('#email-referral').attr('title', $('#enable_email_transmission').text())
    $('#sms-referral, #email-referral').tooltip('fixTitle')
	if(mozilla || opera){$('#user-email-label').css('margin-top', '0px')}
	if(opera && !mobile){
	  $('#referral i').css('margin-top', '2px')
	  adjustHeight('#referral .btn', '18px')
	  $('.icon-caret-right').css('margin-top', '0px')
	}
	if(opera){
	  adjusted1 = false
	  adjust3()
	}

    return this
  })
  $('#preview').live('show', function(){
	$('.preview-body').removeClass('hide')
    $('#send_referral').css('margin-top', '12px')
  })
  $('#preview').live('shown', function(){
  // do something…
    previewShown = true
    $('.icon-caret-right').remove()
    $('.preview-title').prepend("<i class='icon-caret-down'></i>")
	if(opera){$('.icon-caret-down').css('margin-top', '0px')}
  })
  $('#preview').live('hide', function(){$('#send_referral').css('margin-top', '4px')})
  $('#preview').live('hidden', function(){
  // do something…
    previewShown = false
    previewHidden = true
    $('.icon-caret-down').remove()
    $('.preview-title').prepend("<i class='icon-caret-right'></i>")
	if(opera){$('.icon-caret-right').css('margin-top', '0px')}
  })
  function disableReferralModalElements(){
	if(emailReferral){
	  $('#email-referral').removeClass('btn btn-success').addClass('btn disabled')
	  $('#user_email_referral_field').attr('disabled', 'disabled')
	}
	if(smsReferral){
	  $('#sms-referral').removeClass('btn btn-success').addClass('btn disabled')
	  $('#user_sms_referral_field').attr('disabled', 'disabled')
	}
	$('#send_referral').removeClass('btn btn-primary').addClass('btn disabled')
  }
  $('#referral').live('hidden', function(){
    // do something…
	if(!previewHidden){
		if(!opera){$('#referral').spin(false)}
		$('#user_email_referral_field, #user_sms_referral_field').val('')
		disableReferralModalElements()
		smsReferral, emailReferral = false
		$('.preview-body').collapse('hide')
		$('.preview-body, #preview').addClass('hide')
	}
	previewHidden = false
  })
  function prepareSearchElements(){
	search()
	if(webkit){_webkit()}
	if(opera){adjust2()}
  }
  $('#send_referral').live('click', function(){
	var errors = []
    if(!/[\w\.%\+]+@[\w]+\.+[\w]{2,}/.test($('#user_email_referral_field').val()) && $('#user_email_referral_field').val() != ''){
      errors.push($('#user_email_referral_field'))
      $('#user_email_referral_field').parent().addClass('error')
    } else {
	    $('#user_email_referral_field').parent().removeClass('error')
	    disableReferralModalElements()
		if(!opera){$('#referral').spin({
		  lines: 11, // The number of lines to draw
		  length: 7, // The length of each line
		  width: 4, // The line thickness
		  radius: 7, // The radius of the inner circle
		  rotate: 0, // The rotation offset
		  color: '#000', // #rgb or #rrggbb
		  speed: 1, // Rounds per second
		  trail: 60, // Afterglow percentage
		  shadow: false, // Whether to render a shadow
		  hwaccel: true, // Whether to use hardware acceleration
		  className: 'spinner', // The CSS class to assign to the spinner
		  zIndex: 29, // The z-index(defaults to 2000000000)
		  top: 'auto', // Top position relative to parent in px
		  left: 'auto' // Left position relative to parent in px
		})}
	  	$.ajax({
	      type: 'POST',
	      url: '/referrals',
	      data: {
	        'utf8': '✓',
	        'authenticity_token': $("input[name='authenticity_token']").val(),
	        'flash': {'notice': 'notices.referral_sent'},
			'referral': {
				'email_address': $('#user_email_referral_field').val(),
				'phone_number': $('#user_sms_referral_field').val()
			}
	      },
	      error: function(jqXHR){
	      },
	      success: function(data){
			$('#referral').modal('hide')
			$.ajax({
		      type: 'GET',
		      url: '/sidebar/search',
		      data: {
		        'utf8': '✓',
		        'authenticity_token': $("input[name='authenticity_token']").val(),
				'flash': {'notice': 'notices.referral_sent'}
		      },
		      error: function(jqXHR){},
		      success: function(data){
			    $('#content').html(data)
				$('.alert').effect('pulsate', {times: 2}, 300)
				prepareSearchElements()
				if(mobile){
				  iPad ? identifier = '#test-sidebar' : identifier = '.sidebar'
				  adjustMapHeight($(identifier).height()-2)
				}
		      }
		    })
	      }
	    })
	  }
  })
  // Focus on the first non-empty text input or password field
  function setComboFormFocus(){
    $("#combo-form input[type='email'], #combo-form input[type='text']:visible, #combo-form input[type='password']:visible, #combo-form input[type='submit']:visible, #combo-form input[type='tel']:visible, #combo-form button:visible").each(function(index){
      if($(this).val() === '' || $(this).attr('type') === 'submit' || this.tagName.toLowerCase() === 'button'){
        $(this).focus()
        return false
      }
    })
  }
  $('#radio1').live('click', function(){
	radio1 = true
    var radioInput = $(this)
    $('#combo-form').data('state', 'user_sign_up')
    if(opera){_opera()}
	if(!$('#user_email').val().length>0){$('#test').addClass('icon-lock')}
    $('#user_forgot_password_fields, #user_sign_in_fields').slideUp()
    $('#test, #test1').show()
    if($('#required_text').text() == ''){
      $('#required').append("<div id='required_text'>" + required_text +"</div>")
      $('#user_email').css('margin-bottom', '9px')
    }
    $('#user_sign_up_fields').slideDown(function(){
	  setComboFormFocus()
	  if(mobile || opera){
		adjustMapHeight($('.sidebar').height()-2)
		adjusted = false
	  }
	})
  })
  $('#radio2').live('click', function(){
	radio1 = false
	radio2Clicked = true
    var radioInput = $(this)
    $('#test, #test1').hide()
    $('#user_sign_up_fields').slideUp()
    $('#user_sign_in_fields').slideDown(function(){
	  if(mobile){
		if(!adjusted){
		  iPad ? value = $('#test-sidebar').height()-2 : value = $('.sidebar').height()-19
		  adjustMapHeight(value)
		  adjusted = true
		}
	  }
	  $('#test').removeClass('icon-lock')
      $('#combo-form').data('state', 'user_sign_in')
      setComboFormFocus()
      if($('#required_text').text() != ''){
	    required_text = $('#required_text').text()
        $('#required_text').remove()
        $('#user_email').css('margin-bottom', '30px')
      }
      $('#user_forgot_password_link').click(function(){
        $('#combo-form').data('state', 'user_forgot_password')
        $('#user_sign_in_fields').slideUp()
        $('#user_forgot_password_fields').slideDown(function(){
          setComboFormFocus()
          $('#user_remembered_password_link').click(function(){
            $('#combo-form').data('state', 'user_sign_in')
            $('#user_forgot_password_fields').slideUp()
            $('#user_sign_in_fields').slideDown(function(){setComboFormFocus()})
          })
        })
      })
    })
  })
  function getLocale(){
	document.cookie.indexOf('locale') != -1 ? locale1 = document.cookie.split('locale=')[1].substring(0,2) : typeof window.location.pathname.substring(1,3) == 'undefined' ? locale1 = window.location.pathname.substring(1,3) : locale1 = 'en'

	return locale1
  }
  locale1 = getLocale()
  function adjust4(){
	$('#remember_me1').css('margin-left', '197px')
	locale1 == 'ar' ? $('#remember_me').css('margin-left', '-40px') : locale1 == 'he' ? $('#remember_me').css('margin-left', '-58px') : locale1 == 'yi' ? $('#remember_me').css('margin-left', '-72px') : null
	$('#test, #test1').css('position', 'absolute').css('text-align', 'right')
	mozilla && !radio2Clicked ? $('#test, #test1').css('margin-left', '72px') : mozilla && radio2Clicked ? $('#test, #test1').css('margin-left', '187px') : $('#test, #test1').css('margin-left', '189px')
	!mozilla && !chrome ? $('#test, #test1').css('margin-top', '12px') : $('#test, #test1').css('margin-top', '8px')
    $('label').css('text-align', 'right').css('margin-right', '20px')
    $('input').css('direction', 'rtl')
	$('#info-window label').css('text-align', 'right').css('margin-right', '0px')
	$('#referral label').css('text-align', 'right').css('margin-right', '34px')
  }
  function adjust3(){
	if($('#radio2').height() != $('#radio1').height()){
	  if($('#radio2').height() > $('#radio1').height()){
		$('#radio1').css('padding-top',($('#radio2').height()/3)+2)
		adjustHeight('#radio1', $('#radio2').height()-10)
	  }
	  else{
		$('#radio2').css('padding-top',($('#radio1').height()/3)+2)
		adjustHeight('#radio2', $('#radio1').height()-10)
	  }
	  $('#radio2').css('margin-top') > $('#radio1').css('margin-top') ? $('#radio2').css('margin-top', -($('#radio1').outerHeight()+2)) : $('#radio1').css('margin-top', -($('#radio2').outerHeight()+2))
	}
	if(locale1 == 'ar' || locale1 == 'cn' || locale1 == 'he' || locale1 == 'kr' || locale1 == 'yi' && !adjusted1){
	  webkit || mozilla || (!mobile && locale1 == 'kr') ? value = 0 : value = 2
	  if(radio1 && !adjusted1){$('#radio2').css('margin-top',parseInt($('#radio2').css('margin-top').substring(0, $('#radio2').css('margin-top').length))-value)}
	  opera ? locale1 == 'ar' || locale1 == 'kr' || locale1 == 'cn' ? value1 = 1 : locale1 == 'he' ? value1 = 2 : value1 = 0 : null
	  opera && !mobile ? locale1 == 'kr' || locale1 == 'yi' ? value1=0 : value1=1 : null
	  if(!mozilla && !webkit){$('#download-link').css('padding-top',parseInt($('#download-link').css('padding-top').substring(0, parseInt($('#download-link').css('padding-top').length)))-value+value1)}
	  adjusted1 = true
	  locale1 == 'ar' || locale1 == 'he' || locale1 == 'yi' ? adjust4() : null
	}
  }
  adjust3()
  window.onload = function(){adjust3()}
  if(locale1 == 'he' && opera && mobile){$('#download-link').css('padding-top',($('#download-link').css('padding-top').substring(0, $('#download-link').css('padding-top').length-2)-2))}
  $('#check1').live('click', function(){
	if(!rememberMe){
	  rememberMe = true
	  $(this).removeClass('icon-check-empty').addClass('icon-check')
	}  
	else {
	  rememberMe = false
	  $(this).removeClass('icon-check').addClass('icon-check-empty')
	}
  })
  $('#check1').hover(function(){$(this).css('cursor', 'pointer')})
  function adjust5(){
	adjusted1, radio1 = false
	adjust3()
  }
  function adjust6(){
	if(mobile){
      if(opera){adjustMapHeight($('.sidebar').height()-12)}
	  else{
		iPad ? identifier = '#test-sidebar' : identifier = '.sidebar'
		adjustMapHeight($(identifier).height()-2)
	  }
	}	
  }
  $('#combo-form').live('submit', function(){
    var submitButton = $("#combo-form input[type='submit']")
    $(submitButton).attr('disabled', true)
    var errors = []
    if(!/[\w\.%\+]+@[\w]+\.+[\w]{2,}/.test($('#user_email').val())){
      errors.push($('#user_email'))
      $('#user_email').parent().addClass('error')
    } else {$('#user_email').parent().removeClass('error')}
    if(!$(this).data('state') || $(this).data('state') === 'user_sign_up'){
      if($('#user_name').val() === ''){
        errors.push($('#user_name'))
        $('#user_name').parent().addClass('error')
      } else {$('#user_name').parent().removeClass('error')}
      if($('#user_password_confirmation').val().length < 6 || $('#user_password_confirmation').val().length > 20){
        errors.push($('#user_password_confirmation'))
        $('#user_password_confirmation').parent().addClass('error')
      } else {$('#user_password_confirmation').parent().removeClass('error')}
      if(errors.length > 0){
        $(submitButton).attr('disabled', false)
        errors[0].focus()
      } else {
        $.ajax({
          type: 'POST',
          url: '/users.json',
          data: {
            'utf8': '✓',
            'authenticity_token': $("#combo-form input[name='authenticity_token']").val(),
            'user': {
              'email': $('#user_email').val(),
              'name': $('#user_name').val(),
              'organization': $('#user_organization').val(),
              'sms_number': $('#user_sms_number').val(),
              'password': $('#user_password_confirmation').val(),
              'password_confirmation': $('#user_password_confirmation').val()
            }
          },
          error: function(jqXHR){
            var data = $.parseJSON(jqXHR.responseText)
            $(submitButton).attr('disabled', false)
            if(data.errors.email){
              errors.push($('#user_email'))
              $('#user_email').parent().addClass('error')
            }
            if(data.errors.name){
              errors.push($('#user_name'))
              $('#user_name').parent().addClass('error')
            }
            if(data.errors.organization){
              errors.push($('#user_organization'))
              $('#user_organization').parent().addClass('error')
            }
            if(data.errors.sms_number){
              errors.push($('#user_sms_number'))
              $('#user_sms_number').parent().addClass('error')
            }
            if(data.errors.password){
              errors.push($('#user_password_confirmation'))
              $('#user_password_confirmation').parent().addClass('error')
            }
            errors[0].focus()
          },
          success: function(data){
            $.ajax({
              type: 'GET',
              url: '/sidebar/search',
              data: {'flash': {'notice': 'notices.signed_up'}},
              success: function(data){
				$('#content').html(data)
				$('.alert').effect('pulsate', {times: 2}, 300)
				prepareSearchElements()
				radio1 = false
				adjust6()
			  }
            })
          }
        })
      }
    } else if($(this).data('state') === 'user_sign_in'){
      if($('#user_password').val().length < 6 || $('#user_password').val().length > 20){
        errors.push($('#user_password'))
        $('#user_password').parent().addClass('error')
      } else {$('#user_password').parent().removeClass('error')}
      if(errors.length > 0){
        $(submitButton).attr('disabled', false)
        errors[0].focus()
      } else {
        $.ajax({
          type: 'POST',
          url: '/users/sign_in.json',
          data: {
            'utf8': '✓',
            'authenticity_token': $("#combo-form input[name='authenticity_token']").val(),
            'user': {
              'email': $('#user_email').val(),
              'password': $('#user_password').val(),
              'remember_me': rememberMe
            }
          },
          error: function(jqXHR){
            $(submitButton).attr('disabled', false)
            $('#user_password').parent().addClass('error')
            $('#user_password').focus()
          },
          success: function(data){
            $.ajax({
                type: 'GET',
                url: '/sidebar/search',
                data: {'flash': {'notice': 'notices.signed_in'}},
                success: function(data){
	              $('#content').html(data)
				  $('.alert').effect('pulsate', {times: 2}, 300)
				  prepareSearchElements()
				  search_shown = true
				  adjust6()
				  if(opera){$('#user_zip, .control-group').css('margin-bottom','0px')}
				  adjust5()
				}
            })
          }
        })
      }
    } else if($(this).data('state') === 'user_forgot_password'){
      if(errors.length > 0){
        $(submitButton).attr('disabled', false)
        errors[0].focus()
      } else {
        $.ajax({
          type: 'POST',
          url: '/users/password.json',
          data: {
            'utf8': '✓',
            'authenticity_token': $("#combo-form input[name='authenticity_token']").val(),
            'user': {'email': $('#user_email').val()}
          },
          error: function(jqXHR){
            $(submitButton).attr('disabled', false)
            $('#user_email').parent().addClass('error')
            $('#user_email').focus()
          },
          success: function(){
            $(submitButton).attr('disabled', false)
            $('#user_remembered_password_link').click()
            $('#user_password').focus()
          }
        })
      }
    }
    return false
  })
  $(document).ready(function(){
      if(window.location.search.length > 150){
		$.ajax({
		  type: 'GET',
		  url: '/sidebar/search',
		  data: {'flash': {'notice': 'notices.signed_in'}},
		  success: function(data){
		    $('#content').html(data)
			$('.alert').effect('pulsate', {times: 2}, 300)
			prepareSearchElements()
			if(iPad){adjustHeight('#test-sidebar', $('#map').height()+2)}
			radio1 = false
			adjust5()
	  	    if(opera){
		      $('#user_zip').css('margin-bottom','0px')
		      $('.control-group').css('margin-bottom','0px')
		    }
		  }
		})
	  }
	  if($('#map').css('height') != $('.sidebar').css('height') && opera){adjustMapHeight($('.sidebar').css('height'))}
	  $('#radio1').hasClass('btn active') ? radio1 = true : radio1 = false
	  adjust3()
  })
  $('#fb').live('click', function(){window.location.replace($('#url_for_oauth_code').text())})
  function updateStats(){
	$.ajax({
      type: 'GET',
      url: '/sidebar/stat',
      data: {
        'utf8': '✓',
        'authenticity_token': $("input[name='authenticity_token']").val()
      },
      error: function(jqXHR){},
      success: function(data){$('.stats-container').html(data)}
	})
  }
  function adopt(){
	var submitButton = $("#adoption_form input[type='submit']")
    $(submitButton).attr('disabled', true)
    $.ajax({
      type: 'POST',
      url: '/things.json',
      data: {
        'id': $('#thing_id').val(),
        'utf8': '✓',
        'authenticity_token': $('#adoption_form input[name="authenticity_token"]').val(),
        '_method': 'put',
        'thing': {
          'user_id': $('#thing_user_id').val(),
          'name': $('#thing_name').val(),
		  'sms_notifications': smsNotifications,
		  'email_notifications': emailNotifications
        }
      },
      error: function(jqXHR){$(submitButton).attr('disabled', false)},
      success: function(data){
        $.ajax({
          type: 'GET',
          url: '/info_window',
          data: {'thing_id': activeThingId},
          success: function(data){
			stateChange('green')
			if(mozilla){data=data.replace('abandon_button', 'abandon_button1')}
			activeInfoWindow.setContent(data)
			updateStats()
		  }
        })
      }
    })	
  }
  $('#adopt-button').live('click', function(){
	adopt()
    return false
  })
  $('#adoption_form').live('submit', function(){
	adopt()
    return false
  })
  $('#sms_notifications').live('click', function(){
    var link = $(this)
    if(!smsNotifications){
	  $(link).removeClass('disabled').addClass('btn btn-success')
	  smsNotifications = true
	  $(link).attr('title', $('#disable_sms_notifications').text())
	}else{
	  $(link).removeClass('btn btn-success').addClass('btn disabled')
	  smsNotifications = false
	  $(link).attr('title', $('#enable_sms_notifications').text())
	}
	$(link).tooltip('fixTitle').tooltip('show')
    return false
  })
  $('#email_notifications').live('click', function(){
    var link = $(this)
    if(!emailNotifications){
	  $(link).removeClass('disabled').addClass('btn btn-success')
	  emailNotifications = true
	  $(link).attr('title', $('#disable_email_notifications').text())
	} else{
	  $(link).removeClass('btn btn-success').addClass('btn disabled')
	  emailNotifications = false
	  $(link).attr('title', $('#enable_email_notifications').text())
	}
	$(link).tooltip('fixTitle').tooltip('show')
    return false
  })
  function adjust(){
	if(previewShown){
	  $('.preview-body').collapse('hide').addClass('hide')
	  previewShown = false
	}
	$('.icon-caret-down').remove()
    $('.preview-title').prepend("<i class='icon-caret-right'></i>")
	$('#send_referral').removeClass('btn btn-primary').addClass('btn disabled')
    $('#preview').addClass('hide')
  }
  function adjust1(link){
    $('#preview').removeClass('hide')
	$(link).removeClass('disabled').addClass('btn btn-success')	
  }
  $('#sms-referral').live('click', function(){
    var link = $(this)
    if(!smsReferral){
	  adjust1(link)
	  smsReferral = true
	  $('#user_sms_referral_field').removeAttr('disabled')
	  $('#send_referral').removeClass('btn disabled').addClass('btn btn-primary')
	  $(link).attr('title', $('#disable_sms_transmission').text()).tooltip('fixTitle').tooltip('show')
	} else{
	  $(link).removeClass('btn btn-success').addClass('btn disabled')
	  smsReferral = false
	  $('#user_sms_referral_field').attr('disabled', 'disabled')
	  $(link).attr('title', $('#enable_sms_transmission').text()).tooltip('fixTitle').tooltip('show')
	  if(!smsReferral && !emailReferral){adjust()}
	}
    return false
  })
  $('#email-referral').live('click', function(){
    var link = $(this)
    if(!emailReferral){
	  adjust1(link)
	  emailReferral = true
	  $('#user_email_referral_field').removeAttr('disabled')
	  $('#send_referral').removeClass('btn disabled').addClass('btn btn-primary')
	  $(link).attr('title', $('#disable_email_transmission').text()).tooltip('fixTitle').tooltip('show')
	} else{
	  $(link).removeClass('btn btn-success').addClass('btn disabled')
	  emailReferral = false
	  $('#user_email_referral_field').attr('disabled', 'disabled')
	  $(link).attr('title', $('#enable_email_transmission').text()).tooltip('fixTitle').tooltip('show')
	  if(!smsReferral && !emailReferral){adjust()}
	}
    return false
  })
  function abandon(){
    var submitButton = $("#abandon_form input[type='submit']")
    $(submitButton).attr('disabled', true)
    $.ajax({
      type: 'POST',
      url: '/things.json',
      data: {
        'id': $('#thing_id').val(),
        'utf8': '✓',
        'authenticity_token': $('#abandon_form input[name="authenticity_token"]').val(),
        '_method': 'put',
        'thing': {
          'user_id': $('#thing_user_id').val(),
          'name': $('#thing_name').val()
        }
      },
      error: function(jqXHR){
        $(submitButton).attr('disabled', false)
      },
      success: function(data){
		emailNotifications, smsNotifications = false
        $.ajax({
          type: 'GET',
          url: '/info_window',
          data: {'thing_id': activeThingId},
          success: function(data){
			stateChange('red')
			activeInfoWindow.setContent(data)
			updateStats()
          }
        })
      }
    })
  }
  $('#abandon_button, #abandon_button1').live('click', function(){
	abandon()
    return false
  })
  $('#abandon_button, #abandon_button1').live('submit', function(){
	abandon()
    return false
  })
  $('#edit_profile_link').live('click', function(){
    var link = $(this)
    $(link).addClass('disabled')
    $.ajax({
      type: 'GET',
      url: '/users/edit',
      error: function(jqXHR){$(link).removeClass('disabled')},
      success: function(data){
        $('#content').html(data)
		$('#user_city').typeahead({source: cityNames})
		$('#save').icon('hdd')
		$('#back-link').icon('arrow-left')
		if(opera){
		  $('.icon-hdd').css('margin-top', '-30px')
		  $('#user_zip, .control-group').css('margin-bottom','0px')
		  mobile ? adjustMapHeight($('#test-sidebar').height()-84) : $('.icon-arrow-left').css('margin-top','3px')
		}
		if(webkit){_webkit()}
		if(mozilla){$('.icon-hdd').css('margin-top', '-31px')}
		if(mobile || opera){adjustMapHeight($('.sidebar').height()-2)}
		adjust5()
      }
    })
    return false
  })
  $('#edit_form').live('submit', function(){
    var submitButton = $("#edit_form input[type='submit']")
    $(submitButton).attr('disabled', true)
    var errors = []
    if(!/[\w\.%\+\]+@[\w\]+\.+[\w]{2,}/.test($('#user_email').val())){
      errors.push($('#user_email'))
      $('#user_email').parent().addClass('error')
    } else {$('#user_email').parent().removeClass('error')}
    if($('#user_name').val() === ''){
      errors.push($('#user_name'))
      $('#user_name').parent().addClass('error')
    } else {$('#user_name').parent().removeClass('error')}
    if(errors.length > 0){
      $(submitButton).attr('disabled', false)
      errors[0].focus()
    } else {
      $.ajax({
        type: 'POST',
        url: '/users.json',
        data: {
          'id': $('#id').val(),
          'thing_id': activeThingId,
          'utf8': '✓',
          'authenticity_token': $('#edit_form input[name="authenticity_token"]').val(),
          '_method': 'put',
          'user': {
            'email': $('#user_email').val(),
            'name': $('#user_name').val(),
            'organization': $('#user_organization').val(),
            'sms_number': $('#user_sms_number').val(),
            'address_1': $('#user_address_1').val(),
            'address_2': $('#user_address_2').val(),
            'city': $('#user_city').val(),
            'area': $('#user_area').val(),
            'zip': $('#user_zip').val()
          }
        },
        error: function(jqXHR){
          var data = $.parseJSON(jqXHR.responseText)
          $(submitButton).attr('disabled', false)
          if(data.errors.email){
            errors.push($('#user_email'))
            $('#user_email').parent().addClass('error')
          }
          if(data.errors.name){
            errors.push($('#user_name'))
            $('#user_name').parent().addClass('error')
          }
          if(data.errors.organization){
            errors.push($('#user_organization'))
            $('#user_organization').parent().addClass('error')
          }
          if(data.errors.sms_number){
            errors.push($('#user_sms_number'))
            $('#user_sms_number').parent().addClass('error')
          }
          if(data.errors.address_1){
            errors.push($('#user_address_1'))
            $('#user_address_1').parent().addClass('error')
          }
          if(data.errors.address_2){
            errors.push($('#user_address_2'))
            $('#user_address_2').parent().addClass('error')
          }
          if(data.errors.city){
            errors.push($('#user_city'))
            $('#user_city').parent().addClass('error')
          }
          if(data.errors.state){
            errors.push($('#user_area'))
            $('#user_area').parent().addClass('error')
          }
          if(data.errors.zip){
            errors.push($('#user_zip'))
            $('#user_zip').parent().addClass('error')
          }
          errors[0].focus()
        },
        success: function(data){
	      $('#content').html(data)
	      if(mobile){
			iPad ? value = $('#test-sidebar').height()-2 : value = $('.sidebar').height()+5
			adjustMapHeight(value)
		  }
	      prepareSearchElements()
		  if(opera){$('#user_zip, .control-group').css('margin-bottom','0px')}
		  adjust5()
	    }
      })
    }
    return false
  })
  $('#sign-out-link').live('click', function(){
    var link = $(this)
    $(link).addClass('disabled')
    $.ajax({
      type: 'DELETE',
      url: '/users/sign_out.json',
      error: function(jqXHR){$(link).removeClass('disabled')},
      success: function(data){
        $.ajax({
          type: 'GET',
          url: '/sidebar/combo_form',
          data: {'flash': {'warning': 'notices.signed_out'}},
          success: function(data){
            $('#content').html(data)
			radio1 = true
			$('.alert').effect('pulsate', {times: 2}, 300)
			rememberMe = true
			setIcons1()
 			if(opera){
	  		  _opera()
			  adjusted1 = false
			}
			if(webkit){_webkit()}
			if(mozilla){_mozilla()}
			if(mobile){
			  adjustMapHeight($('.sidebar').height()-2)
			  adjusted = false
			}
			adjust3()
          }
        })
      }
    })
    return false
  })
  $('#sign_in_form').live('submit', function(){
    var submitButton = $("#sign_in_form input[type='submit']")
    $(submitButton).attr('disabled', true)
    $.ajax({
      type: 'GET',
      url: '/users/sign_in',
      error: function(jqXHR){$(submitButton).attr('disabled', false)},
      success: function(data){
		stateChange()
        activeInfoWindow.setContent(data)
		if(mobile){
		  if(opera){adjustMapHeight($('.sidebar').height()-12)}
		  else{
			iPad ? identifier = '#test-sidebar' : identifier = '.sidebar'
			adjustMapHeight($(identifier).height()-2)
		  }
		}
		if(opera){$('#user_zip, .control-group').css('margin-bottom','0px')}
		adjust5()
      }
    })
    return false
  })
  $('#back-link').live('click', function(){
    var link = $(this)
    $(link).addClass('disabled')
    $.ajax({
      type: 'GET',
      url: '/sidebar/search',
      error: function(jqXHR){$(link).removeClass('disabled')},
      success: function(data){
	    $('#content').html(data)
	    if(mobile){
	  	  iPad ? value = $('#test-sidebar').height()-2 : value = $('.sidebar').height()+5
		  if(opera){value = $('.sidebar').height()-12}
		  adjustMapHeight(value)
		}
	    prepareSearchElements()
	    if(opera){
		  $('#user_zip').css('margin-bottom','0px')
		  $('.control-group').css('margin-bottom','0px')
		}
		adjust5()
	  }
    })
    return false
  })
  $('#reminder_button').live('click', function(){
    var submitButton = $("#reminder_form input[type='submit']")
    $('#reminder_button').attr('disabled', true)
	if(!opera){$('#info-window').spin({
	  lines: 11, // The number of lines to draw
	  length: 7, // The length of each line
	  width: 4, // The line thickness
	  radius: 7, // The radius of the inner circle
	  rotate: 0, // The rotation offset
	  color: '#000', // #rgb or #rrggbb
	  speed: 1, // Rounds per second
	  trail: 60, // Afterglow percentage
	  shadow: false, // Whether to render a shadow
	  hwaccel: true, // Whether to use hardware acceleration
	  className: 'spinner', // The CSS class to assign to the spinner
	  zIndex: 29, // The z-index(defaults to 2000000000)
	  top: 'auto', // Top position relative to parent in px
	  left: 'auto' // Left position relative to parent in px
	})}
    $.ajax({
      type: 'POST',
      url: '/reminders.json',
      data: {
        'utf8': '✓',
        'authenticity_token': $('#reminder_form input[name="authenticity_token"]').val(),
        'reminder': {
          'from_user_id': $('#reminder_from_user_id').val(),
          'to_user_id': $('#reminder_to_user_id').val(),
          'thing_id': activeThingId
        }
      },
      error: function(jqXHR){$('#reminder_button').attr('disabled', false)},
      success: function(data){
		if(!opera){$('#info-window').spin(false)}
        $.ajax({
          type: 'GET',
          url: '/sidebar/search',
          data: {'flash': {'notice': 'notices.reminder_sent'}},
          success: function(data){
			$('#content').html(data)
			$('.alert').effect('pulsate', {times: 2}, 300)
			prepareSearchElements()
			stateChange()
          }
        })
      }
    })
    return false
  })
  $('#tos_link').click(function(){if(mobile && $(window).width() < 800){$('#tos').css('-webkit-transform', 'scale(.5)').css('-moz-transform', 'scale(.5)').css('-ms-transform', 'scale(.5)')}})	
  $('.icon-list-ul').tooltip({show: 1000, hide: 100, placement: 'right', trigger: 'manual'})
  if(mobile){
    $('#map').click(function(){
	  if(!tipShown && !sidebarVisible){
        $('.icon-list-ul').tooltip('show')
	    tipShown=true
	  } else{$('.icon-list-ul').tooltip('hide')}
    })
  }
})